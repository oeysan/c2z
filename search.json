[{"path":"https://oeysan.github.io/c2z/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://oeysan.github.io/c2z/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Øystein Olav Skaar Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://oeysan.github.io/c2z/TODO.html","id":null,"dir":"","previous_headings":"","what":"TODO","title":"TODO","text":"Add support Cristin categories (e.g., interviews) Make ZoteroISBN zoteroDOI less convoluted Add support categories using identifiers (e.g., thesis ISBN) Create elegant system copying Zotero items Look possibility adding pdfs adding ISBN/DOI/Cristin Look possibility adding function identifying retracted publications Prepare migration Cris (Current research informastion system)","code":""},{"path":"https://oeysan.github.io/c2z/TODO.html","id":"archive","dir":"","previous_headings":"","what":"Archive","title":"TODO","text":"Integrate DOI (DataCite) Integrate Cristin API Integrate DOI (CrossRef) Integrate ISBN / Marc 21 (Alma / Loc) Integrate Zotero api","code":""},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"collections","dir":"Articles","previous_headings":"","what":"Collections","title":"Behold c2z!","text":"computer desktop reveals D&D alignment. Similarly, way structure Zotero library collections reveals personality. (Chaotic neutral using collections, obviously.) c2z lets create nested collections whim, seen .","code":""},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"creating-collections","dir":"Articles","previous_headings":"Collections","what":"Creating collections","title":"Behold c2z!","text":"example define vector nine elements based “quick brown fox jumps lazy dog”. use Zotero function, wrapper connects Zotero API combines major functions c2z, create nine nested collections based string (.e., “dog” nested “lazy” nested “” et cetera). set library = TRUE, thereby querying Zotero library, create = TRUE create collections exist (.e., nine collections). recursive action, let’s keep noise minimum set silent = TRUE.","code":"# Let's create a vector of nested collections collection.names <- c(   \"The\", \"quick\", \"brown\", \"fox\", \"jumps\", \"over\", \"the\", \"lazy\", \"dog\"   )  # Create the collections create.collections <- Zotero(   collection.names = collection.names,   library = TRUE,   create = TRUE,   silent = TRUE )"},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"using-collections","dir":"Articles","previous_headings":"Collections","what":"Using collections","title":"Behold c2z!","text":"Now created collections, can access collections different ways. default, function find last element vector (.e., “dog”). However, often want access , , nested collections. can achieve using two different approaches. 1) using recursive = TRUE access given element recursively find nested collections, 2) using ancestor = TRUE trace lineage specified collection. may use collection.name (don’t several top-level collections name, ? , function select newest collection specified name), collection.key keep track things. c2z default look collections names regardless letter case, important set case.insensitive = FALSE.","code":"# Dog create.collections$collections  |>   dplyr::select(c(key, name, parentCollection)) #> # A tibble: 1 × 3 #>   key      name  parentCollection #>   <chr>    <chr> <chr>            #> 1 5NYB5MBP dog   7BU5WY5K"},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"all-collections","dir":"Articles","previous_headings":"Collections > Using collections","what":"All collections","title":"Behold c2z!","text":"","code":"# Find collections collections <- Zotero(   collection.names = \"The\",   recursive = TRUE,   library = TRUE,   silent = TRUE )  # print collections collections$collections |>   dplyr::select(c(key, name, parentCollection)) #> # A tibble: 9 × 3 #>   key      name  parentCollection #>   <chr>    <chr> <chr>            #> 1 4MLMXWL9 The   FALSE            #> 2 YHXQRVXN quick 4MLMXWL9         #> 3 CXU5MQTQ brown YHXQRVXN         #> 4 8IEI42YB fox   CXU5MQTQ         #> 5 TNE7ZJRW jumps 8IEI42YB         #> 6 74FECN4W over  TNE7ZJRW         #> 7 P8GPZPSW the   74FECN4W         #> 8 7BU5WY5K lazy  P8GPZPSW         #> 9 5NYB5MBP dog   7BU5WY5K"},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"recursive-path","dir":"Articles","previous_headings":"Collections > Using collections","what":"Recursive path","title":"Behold c2z!","text":"","code":"# Find collections recursive <- Zotero(   collection.names = c(\"The\", \"quick\", \"brown\"),   recursive = TRUE,   library = TRUE,   silent = TRUE )  # print collections recursive$collections |>   dplyr::select(name) #> # A tibble: 7 × 1 #>   name  #>   <chr> #> 1 brown #> 2 fox   #> 3 jumps #> 4 over  #> 5 the   #> 6 lazy  #> 7 dog"},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"ancestor-path","dir":"Articles","previous_headings":"Collections > Using collections","what":"Ancestor path","title":"Behold c2z!","text":"","code":"# Find collections ancestor <- Zotero(   collection.names = c(\"The\", \"quick\", \"brown\", \"fox\"),   ancestor = TRUE,   library = TRUE,   silent = TRUE )  # print collections ancestor$collections |>   dplyr::select(name) #> # A tibble: 4 × 1 #>   name  #>   <chr> #> 1 The   #> 2 quick #> 3 brown #> 4 fox"},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"items","dir":"Articles","previous_headings":"","what":"Items","title":"Behold c2z!","text":"Okay, ’ve created bunch collections. Kinda cool, guess? collections somewhat pointless without items. Sooo, lets add items!","code":""},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"adding-items-from-cristin","dir":"Articles","previous_headings":"Items","what":"Adding items from Cristin","title":"Behold c2z!","text":"One motivation develop c2z attempt making registering data Cristin feel useful. following example Cristin function gather publications containing word “cheese”, published since 2020 (good year cheese, probably). zotero.import set TRUE, indicating function use CristinWrangler convert Cristin metadata acceptable format Zotero. use.identifiers = TRUE function therefore use identifiers (.e., ISBN DOI) augment metadata. Furthermore, crossref.search = TRUE, meaning function search CrossRef metadata identifiers missing. Also, autosearch = TRUE process consequently conducted automatically. items posted Zotero library using Zotero, items uploaded using items argument. index = TRUE, creating index items. Please note crossref.search normally used (see README. Rather finicking h-indexes impact factors, Norwegians weird obsession NVI (Norwegian Science Index), two-level index level one publications ordinary level two great (probably makes sense). However, Cristin simple method filtering publications qualify two levels. specified filter arguments try filter categories usually contain publications worthy NVI (see Cristin categories). Let’s post results collection “fox”. second example decided 2019 even better year cheese change published_since argument 2019. reason ’re demonstrate duplicate function CristinWrangler, identify Cristin references imported Zotero zotero.check = TRUE. function try use zotero argument search specified collection(s), argument empty, search entire Zotero library. bother post remaining results, however, let’s use ZoteroIndex create index collected items.","code":"# Filter items cristin.filter <- c(   \"ACADEMICREVIEW\",   \"ARTICLEJOURNAL\",   \"ARTICLE\",    \"ANTHOLOGYACA\",    \"CHAPTER\",    \"CHAPTERACADEMIC\",   \"CHAPTERARTICLE\",   \"COMMENTARYACA\",   \"MONOGRAPHACA\" )  # Query Cristin cristin <- Cristin(   title = \"cheese\",   published_since = 2020,   filter = cristin.filter,   zotero.import = TRUE,   use.identifiers = TRUE,   crossref.search = TRUE,   autosearch = TRUE,   silent = TRUE )  # Get the fox key fox <- collections$collections |>    dplyr::filter(name == \"fox\") |>    dplyr::pull(\"key\")  # Post the items to the collection called fox post.cristin <- Zotero(   collection.key = fox,   items = cristin$export,   library = TRUE,   index = TRUE,   post = TRUE,   post.collections = FALSE,   post.items = TRUE,   silent = TRUE )  # What do we got? print(post.cristin$index$name) #> [1] \"Vasiliauskaite et al. (2022) Application of Edible Coating Based on Liquid Acid Whey Protein Concentrate with Indigenous Lactobacillus helveticus for Acid-Curd Cheese Quality Improvement\"                            #> [2] \"Lundberg et al. (2021) Determination of maintenance Jarlsberg® cheese dose to keep the obtained serum osteocalcin level; a response surface pathway designed de-escalation dose study with individual starting values\" #> [3] \"Lundberg et al. (2022) Effect on bone anabolic markers of daily cheese intake with and without vitamin K2: a randomised clinical trial\"                                                                                #> [4] \"Olsen et al. (2021) Feeding concentrates with different protein sources to high-yielding, mid-lactation Norwegian Red cows: Effect on cheese ripening\"                                                                 #> [5] \"Lundberg et al. (2020) Increased serum osteocalcin levels and vitamin K status by daily cheese intake\"                                                                                                                 #> [6] \"Henriquez Parodi et al. (2021) Kavli Selling Cheese in a Tube to the World\"                                                                                                                                            #> [7] \"Gaber et al. (2021) Manufacture and characterization of acid-coagulated fresh cheese made from casein concentrates obtained by acid diafiltration\"                                                                     #> [8] \"Veflen et al. (2022) Signalling taste through packaging: The effects of shape and colour on consumers’ perceptions of cheeses\"                                                                                         #> [9] \"Wolka et al. (2021) Soil organic carbon and associated soil properties in Enset (Ensete ventricosum Welw. Cheesman)-based homegardens in Ethiopia\" # Query Cristin (again) cristin2 <- Cristin(   title = \"cheese\",   published_since = 2019,   filter = cristin.filter,   zotero.import = TRUE,   use.identifiers = FALSE,   crossref.search = FALSE,   autosearch = FALSE,   zotero.check = TRUE,   zotero = post.cristin ) #> Conducting initial query  #> Found 26 results  #> Filtered out 11 references  #> Checking whether references are supported (See `CristinSupported()`).  #> Looking for missing data.  #> Checking whether references exist in library  #> Removed 9 duplicates  #> Converting 6 references from Cristin to Zotero format  #>  ------Next ID: 1721342. Progress: 16.67% (1/6). ETA: 12.03.2023 - 05:19:10------ ------Next ID: 1678430. Progress: 33.33% (2/6). ETA: 12.03.2023 - 05:19:10------ ------Next ID: 1709922. Progress: 50.00% (3/6). ETA: 12.03.2023 - 05:19:10------ ------Next ID: 1668352. Progress: 66.67% (4/6). ETA: 12.03.2023 - 05:19:10------ ------Next ID: 1715026. Progress: 83.33% (5/6). ETA: 12.03.2023 - 05:19:10------ -----------------Process: 100.00% (6/6). Elapsed time: 00:00:01-----------------  # Create an index items <- ZoteroIndex(cristin2$export)  # What do we got? print(items$name) #> [1] \"Soltani & Årethun (2019) Cultural and touristic aspects of gamalost, a local cheese from the fjord of Norway\"                                       #> [2] \"Eskildsen et al. (2019) Estimating dry matter and fat content in Blocks of Swiss cheese during production using on-line near infrared spectroscopy\" #> [3] \"Kure & Skaar (2019) Fungal problem in cheese industry, The\"                                                                                         #> [4] \"Borgund Barnung et al. (2019) High lactose whey cheese consumption and risk of colorectal cancer - The Norwegian Women and Cancer Study\"            #> [5] \"Hrkovic-Porobija et al. (2019) NITROGEN MATTER AS PARAMETERS OF THE QUALITY OF THE LIVNO AND TRAVNIK CHEESE\"                                        #> [6] \"Mozuraityte et al. (2019) Sodium reduction in processed cheese spreads and the effect on physicochemical properties\""},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"adding-items-from-identifiers","dir":"Articles","previous_headings":"Items","what":"Adding items from identifiers","title":"Behold c2z!","text":"Sometimes, happens everybody, ’re bunch ISBNs DOIs lying around. Luckily, can easily add Zotero using Zotero wrapper. case adding collection “quick”.","code":"# ISBN isbn.items <- c(\"9780761973836\", \"9788215048451\")  # DOI doi.items <- c(\"https://doi.org/10.31234/osf.io/venu6\",                 \"10.1177/1098214010376532\")  # Post the items to the collections called quick identifiers <- Zotero(   collection.names = c(\"The\", \"quick\"),   isbn = isbn.items,   doi = doi.items,   library = TRUE,   index = TRUE,   post = TRUE,   post.collections = FALSE,   post.items = TRUE,   silent = TRUE )  # What do we got? print(identifiers$index$name) #> [1] \"Ong-Dean et al. (2011) Challenges and Dilemmas in Implementing Random Assignment in Educational Research\"                                                               #> [2] \"Wijeakumar et al. (2020) Home assessment of visual working memory in pre-schoolers reveals associations between behaviour, brain activation and environmental measures\" #> [3] \"Field & Hole (2003) How to design and report experiments\"                                                                                                               #> [4] \"Grøholt et al. (2022) Lærebok i barne- og ungdomspsykiatri\""},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"adding-items-from-the-man","dir":"Articles","previous_headings":"Items","what":"Adding items from the Man","title":"Behold c2z!","text":"working academia within Norwegian context, frequently need examine musings politicians, selected group researchers. , let’s add random white papers official reports using ZoteroGov.","code":"# Combine to a single tibble using dplyr gov.items <- dplyr::bind_rows(   # Find some random white papers   ZoteroGov(c(\"26 (2001-2002)\", \"31 (2014-2015)\"), type = \"meldst\"),   # Finds some random official Norwegian reports.   ZoteroGov(c(\"2014: 4\", \"2018: 2\"), type = \"nou\") )  # Post the items to the collection called brown ## Fitting given the source the.man <- Zotero(   collection.names = c(\"The\", \"quick\", \"brown\"),   items = gov.items,   library = TRUE,   index  = TRUE,   post = TRUE,   post.collections = FALSE,   post.items = TRUE,   silent = TRUE )  # What do we got? print(the.man$index$name) #> [1] \"St.meld. nr. 26 (2001-2002) (2002) Bedre kollektivtransport\"                                                                   #> [2] \"NOU 2014: 4 (2014) Enklere regler – bedre anskaffelser — Forenkling av det norske anskaffelsesregelverket\"                     #> [3] \"NOU 2018: 2 (2018) Fremtidige kompetansebehov I — Kunnskapsgrunnlaget\"                                                         #> [4] \"Meld. St. 31 (2014–2015) (2015) Garden som ressurs – marknaden som mål — Vekst og gründerskap innan landbruksbaserte næringar\""},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"adding-items-from-cran","dir":"Articles","previous_headings":"Items","what":"Adding items from CRAN","title":"Behold c2z!","text":"Show love (citations love, yes?) authors create packages use! (see , Hadley Wickham). , ’re using ZoteroCran function collect metadata Comprehensive R Archive Network (CRAN). collection.key defined : key “7BU5WY5K” argument recursive = TRUE, thus function looking specified collection (.e., “lazy”) children (.e., “dog”). often useful link items several (nested) collections. instance, can create nested collections “project -> CRAN-packages” link items collections. can choose access items “project”, including “CRAN-packages”, just access filed latter.","code":"lazy <- collections$collections |>    dplyr::filter(name == \"lazy\") |>    dplyr::pull(\"key\") # Find selected packages  packages <- c(   \"dplyr\",   \"httr\",   \"jsonlite\",   \"purrr\",   \"rvest\",   \"rlang\",   \"tibble\",   \"tidyr\",   \"tidyselect\" )  # Post the items to the collections called lazy and dog cran <- Zotero(   collection.key = lazy,   library = TRUE,   index = TRUE,   recursive = TRUE,   items = ZoteroCran(packages),   post = TRUE,   post.collections = FALSE,   post.items = TRUE,   silent = TRUE )  # What do we got? print(cran$index$name) #> [1] \"Wickham et al. (2023a) dplyr: A Grammar of Data Manipulation\"                                #> [2] \"Wickham (2023) httr: Tools for Working with URLs and HTTP\"                                   #> [3] \"Ooms (2022) jsonlite: A Simple and Robust JSON Parser and Generator for R\"                   #> [4] \"Wickham & Henry (2023) purrr: Functional Programming Tools\"                                  #> [5] \"Henry & Wickham (2022a) rlang: Functions for Base Types and Core R and 'Tidyverse' Features\" #> [6] \"Wickham (2022) rvest: Easily Harvest (Scrape) Web Pages\"                                     #> [7] \"Müller & Wickham (2023) tibble: Simple Data Frames\"                                          #> [8] \"Wickham et al. (2023b) tidyr: Tidy Messy Data\"                                               #> [9] \"Henry & Wickham (2022b) tidyselect: Select from a Set of Strings\""},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"copying","dir":"Articles","previous_headings":"","what":"Copying","title":"Behold c2z!","text":"many situations want copy collections items (attachments) libraries. may want copy public Zotero library share collections research group. Zotero function contains (somewhat convoluted) method copying collections items group library user library (vice versa). However, example ’re appending group collections long line nested collections, making process somewhat messy Therefore, split process using ZoteroCopy ZoteroPost functions. change.library argument query Zotero alter location according specified coordinates (default location user library defined .Renviron). Please see tutorial set user/group id API keys.","code":"# Access the group library (defined in .Renviron) group.library <- Zotero(   user = FALSE,   library = TRUE,   silent = TRUE )  # Copy the library creating new keys  copy.library <- ZoteroCopy(   zotero = group.library,   change.library = TRUE,   silent = TRUE )  # Find key for dog dog <- collections$collections |>    dplyr::filter(name == \"dog\") |>    dplyr::pull(\"key\")  # Change parent collection of top-level collection to dog copy.library$collections <- copy.library$collections |>   dplyr::mutate(     parentCollection = dplyr::case_when(       parentCollection == \"FALSE\" ~ dog,       TRUE ~ parentCollection     )   )  # Copy the collection and items to the user library post.copy <- ZoteroPost(   zotero = copy.library,   silent = TRUE )  items <- ZoteroIndex(post.copy$items)  # What do we got? print(items$name) #> [1] \"Frühholz et al. (2021) Neurocognitive processing efficiency for discriminating human non-alarm rather than alarm scream calls\" #> [2] \"Frühholz et al. (2021) Appendix #1: Full article (attachment)\"                                                                 #> [3] \"Frühholz et al. (2021) Appendix #2: These are some thoug... (note)\""},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"bibliography","dir":"Articles","previous_headings":"","what":"Bibliography","title":"Behold c2z!","text":"’s wrap! Now ’s time harvest bounty created steps . create separate bibliographies, sake simplicity mashing together. ’s friendship! arguments used Zotero somewhat self-explanatory, however, also csl.type access style repository order create Citation Style Language (CSL) file according APA7.","code":"# Create references.bib in biblatex format with style.csl according to APA7 bibliography <- Zotero(   collection.names = \"The\",   recursive = TRUE,   library = TRUE,   export = TRUE,   format = \"biblatex\",   save.data = TRUE,   bib.name = \"references\",   csl.type = \"apa\",   csl.name = \"style\",   silent = TRUE )  # What do we got? sprintf(   \"We now have %s collections and %s items\",   bibliography$n.collections,   bibliography$n.items ) #> [1] \"We now have 11 collections and 29 items\""},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"deleting","dir":"Articles","previous_headings":"","what":"Deleting","title":"Behold c2z!","text":"Housecleaning! clean mess library. set ragnarok force = TRUE, want delete everything library.","code":"# Delete all collections and items belonging to initial key delete <- ZoteroDelete(   bibliography,    delete.collections = TRUE,   delete.items = TRUE ) #> Deleting 11 collections using 1 DELETE request  #>  -----------------Process: 100.00% (1/1). Elapsed time: 00:00:00----------------- #> Deleting 29 items using 1 DELETE request  #>  -----------------Process: 100.00% (1/1). Elapsed time: 00:00:00-----------------"},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Behold c2z!","text":"can now display references collected created using c2z.","code":""},{"path":"https://oeysan.github.io/c2z/articles/zotero_api.html","id":"step-1-locate-zotero-settings","dir":"Articles","previous_headings":"","what":"Step 1: Locate Zotero settings","title":"Create a Zotero API key","text":"likely purpose using c2z manipulate (personal) Zotero library. Thus, first step acquire access key account, find settings. seen screenshot , also can find userID. Figure 1. Zotero settings.","code":""},{"path":"https://oeysan.github.io/c2z/articles/zotero_api.html","id":"step-2-create-a-key","dir":"Articles","previous_headings":"","what":"Step 2: Create a key","title":"Create a Zotero API key","text":"Next, enter key description decide kind access need. bare minimum “allow library access”, however, want create, edit, copy, delete items need “allow write access” well. can also add group permissions. Now created key, seen , need make available c2z. Figure 2. key!","code":""},{"path":"https://oeysan.github.io/c2z/articles/zotero_api.html","id":"step-3-add-key-to-r","dir":"Articles","previous_headings":"","what":"Step 3: Add key to R","title":"Create a Zotero API key","text":"Though possible directly apply key various functions, recommended add key .Renviron. simplest approach use usethis edit_r_environ() function, open file convenience. Figure 3. Example .Renviron content.","code":"usethis::edit_r_environ()"},{"path":"https://oeysan.github.io/c2z/articles/zotero_api.html","id":"how-it-works","dir":"Articles","previous_headings":"","what":"How it works","title":"Create a Zotero API key","text":"","code":"# Access default zotero library user.library <- Zotero(library = TRUE) #> Conducting initial query  #> Found 0 results  #> Conducting initial query  #> Found 0 results  #> The zotero library contains: 0 collections and 0 items # Print type of library and id sprintf(\"The library has the prefix: %s\", user.library$prefix) #> [1] \"The library has the prefix: users/9913421\"  # Access the group zotero library group.library <- Zotero(user = FALSE, library = TRUE) #> Conducting initial query  #> Found 2 results  #> Conducting initial query  #> Found 3 results  #> The zotero library contains: 2 collections and 3 items # Print type of library and id sprintf(\"The library has the prefix: %s\", group.library$prefix) #> [1] \"The library has the prefix: groups/4827927\"  # Print the API sprintf(\"The API key for these libraries is: %s\", Sys.getenv(\"ZOTERO_API\")) #> [1] \"The API key for these libraries is: RqlAmlH5l1KPghfCseAq1sQ1\""},{"path":"https://oeysan.github.io/c2z/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Øystein Olav Skaar. Author, maintainer, copyright holder.","code":""},{"path":"https://oeysan.github.io/c2z/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Skaar ØO (2023). c2z: Reference Manager R. https://oeysan.github.io/c2z/.","code":"@Manual{,   author = {Øystein Olav Skaar},   title = {c2z: a Reference Manager in R},   year = {2023},   url = {https://oeysan.github.io/c2z/}, }"},{"path":[]},{"path":[]},{"path":"https://oeysan.github.io/c2z/index.html","id":"what-is-c2z-cristin-to-zotero","dir":"","previous_headings":"","what":"What is c2z (Cristin to Zotero)?","title":"A Reference Manager in R","text":"observant reader already identified brilliant word play Psalm 72:8 (King James Version): “shall dominion also sea sea, river unto ends earth”. c2z aims obtaining total dominion Cristin (Current Research Information SysTem Norway) Zotero. package enables manipulating Zotero libraries using R. Import, batch, references Cristin, regjeringen., CRAN, ISBN (currently, Alma Library Congress), DOI (currently, CrossRef DataCite) Zotero library. Add, edit, copy, delete items, including attachments collections, export references BibLaTeX (formats) directly R.","code":""},{"path":"https://oeysan.github.io/c2z/index.html","id":"who-would-want-to-use-c2z","dir":"","previous_headings":"What is c2z (Cristin to Zotero)?","what":"Who would want to use c2z?","title":"A Reference Manager in R","text":"Anyone using Zotero, similar reference management software. However, project probably extra interest researchers, students, bibliomaniacs others working library-type services. Though project grounded Norwegian context (apologizes Åse Wetås writing documentation (American) English), international publications easily available DOI ISBN, Zotero functions independent acquiring metadata external services. require specific international/national/regional library database, please make request open pull request. requirement library services open access serve MARC 21 / DOI type metadata (fairly structured XML/JSON). Okay, okay, requirements, ’ll look request try make work.","code":""},{"path":"https://oeysan.github.io/c2z/index.html","id":"what-can-you-use-c2z-for","dir":"","previous_headings":"What is c2z (Cristin to Zotero)?","what":"What can you use c2z for?","title":"A Reference Manager in R","text":"Hoarding references Zotero, obviously. However, c2z also practical purposes, especially combination packages. probably right kind weirdo (since reading ) use c2z easily handle references writing preparing manuscripts (e.g., papaja), use (personal) webpage (e.g., blogdown bookdown). need work living, just like show , automate publication list résumé (e.g., vitae). Man pays keep track publications, schedule script (e.g., cronR, taskscheduleR Github Actions) keep track new publications institution research group email (Man) recent publications monthly weekly (hourly) basis (e.g., mailR). really feel like use Home Assistant play Tina Turner - Best (Official Music Video) whenever one publications registered Cristin. sky limit!","code":""},{"path":"https://oeysan.github.io/c2z/index.html","id":"list-of-current-features","dir":"","previous_headings":"","what":"List of current features","title":"A Reference Manager in R","text":"Add, edit, copy, delete (nested) Zotero collections. Add, edit, copy, delete Zotero items, including attachments. Export Zotero items R BibLaTeX (formats). Currently supported formats: books (e.g., anthologies), book chapters, journal articles, presentations (e.g., lectures), opinions pieces. Currently supported formats: books, book chapters, conference papers, journal articles. Batch import Norwegian white papers official Norwegian reports. Batch import R packages CRAN. Search CrossRef, automatically manually, author(s), title, year. Augment Cristin references ISBN, DOI, CrossRef search.","code":""},{"path":"https://oeysan.github.io/c2z/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"A Reference Manager in R","text":"project strives keeping number dependencies minimum. However, c2z highly dependent dplyr, httr, purrr, rvest, tibble, jsonlite. Dependencies automatically installed CRAN. default, outdated dependencies automatically upgraded.","code":""},{"path":"https://oeysan.github.io/c2z/index.html","id":"installing","dir":"","previous_headings":"","what":"Installing","title":"A Reference Manager in R","text":"probably want access restricted Zotero library. Please see short tutorial create Zotero API key define .Renviron. can install c2z GitHub. already previous version c2z installed, using command update latest development version.","code":""},{"path":"https://oeysan.github.io/c2z/index.html","id":"development-version-github","dir":"","previous_headings":"Installing","what":"Development version (GitHub)","title":"A Reference Manager in R","text":"","code":"devtools::install_github(\"oeysan/c2z\")"},{"path":"https://oeysan.github.io/c2z/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"A Reference Manager in R","text":"Also, please see magnificent vignette documentation, work associate professor department teacher education Norway. , one responsibilities surprisingly enough teaching. Even surprising, literature Norwegian, form monographs anthologies. Unfortunately, Zotero well-adapted importing Norwegian books ISBN. example , Imsen (2020) imported using Zotero magic wand (left) c2z (right). Similarly, Zotero unable import Johannessen et al. (2021) using ISBN (cf. lookup failed). Evidently, Alma (47BIBSYS) superior Open WorldCat similar comes identifying () Norwegian books. Figure 1. Zotero vs. c2z example. following example c2z addresses issue, Zotero function act wrapper 1) connecting Zotero API, 2) creating collection called “c2z-example”, 3) search items using two ISBN identifiers (.e. Imsen, 2020; Johannessen et al., 2021), 4) posting items defined collection, 5) exporting items BibLaTeX creating bibliography HTML format using APA7 reference style, 6) cleaning example deleting collection two items. (R output rather noisy can disabled adding silent = TRUE.) example yield following HTML output: Johannessen et al. (2021) interesting (well, perhaps interesting people) example nasty business metadata. Cristin authors listed Christoffersen, Johannessen, Tufte, Alma authors listed Johannessen, Christoffersen, Tufte, whereas book list authors Johannessen, Tufte, Christoffersen (interesting, right?). c2z amends conflicting results provided Cristin Alma parsing statement responsibility field (exists) MARC 21.","code":"library(c2z) example <- Zotero(   collection.names = \"c2z-example\",   library = TRUE,   create = TRUE,   isbn = c(\"9788215040561\",\"9788279354048\"),   post = TRUE,   post.collections = FALSE,   export = TRUE,   include = \"bib\",   style = \"apa-single-spaced\",   delete = TRUE,   delete.collections = TRUE,   delete.items = TRUE ) #> Conducting initial query  #> Found 0 results  #> Creating a new collection named c2z-example  #> Adding 1 collection to library using 1 POST request  #> -----------------Process: 100.00% (1/1). Elapsed time: 00:00:00----------------- #> $post.status.collections #> # A tibble: 1 × 2 #>   status  key      #>   <fct>   <chr>    #> 1 success KRD9VJ2W #>  #> $post.summary.collections #>  #>   success unchanged    failed  #>         1         0         0  #>  #>  #> Conducting initial query  #> Found 0 results  #> Collection c2z-example (KRD9VJ2W) contains: 0 subcollections and 0 items  #> Searching 2 items using ISBN  #> Adding 2 formated items to Zotero list  #> Adding 2 items to library using 1 POST request  #> -----------------Process: 100.00% (1/1). Elapsed time: 00:00:01----------------- #> $post.status.items #> # A tibble: 2 × 2 #>   status  key      #>   <fct>   <chr>    #> 1 success UQTJKZT4 #> 2 success K3577XYM #>  #> $post.summary.items #>  #>   success unchanged    failed  #>         2         0         0  #>  #>  #> Exporting 2 items  #> Items exported as biblatex  #> Deleting 1 collection using 1 DELETE request  #> -----------------Process: 100.00% (1/1). Elapsed time: 00:00:00----------------- #> Deleting 2 items using 1 DELETE request  #> -----------------Process: 100.00% (1/1). Elapsed time: 00:00:00-----------------"},{"path":"https://oeysan.github.io/c2z/index.html","id":"limitations","dir":"","previous_headings":"","what":"Limitations","title":"A Reference Manager in R","text":"Despite several innovative, creative valiant efforts mitigate common weaknesses CrossRef, DataCite, MARC 21, especially Cristin, c2z always create order chaotic metadata world. major limitation reference management software scraping metadata databases poorly registered data. GIGO happen manual inspection required assure references correct. Moreover, project stands falls relationship API’s, meaning c2z likely high maintenance project. instance, Cris/NVA planned replace Cristin 2023, likely cause headache. Finally (really, probably several limitations), c2z built speed. project tries wrangle data strange exotic beasts, simultaneously hoping avoid exploding kittens. Isolated, wrangling data Cristin, ISBN, DOI time-consuming (though downloading entire Cristin database (> 300 MB) importing Zotero take time). One reason Cristin reason keeps separate table containing contributors, meaning reference needs two API calls. Book chapters even time-consuming, Cristin also keeps book metadata another table, totaling four (4) API calls. Enabling data-augmentation DOI ISBN demands even API calls, Crossref search enabled, prior identification DOI ISBN, process can take long, long time. (… totally hammer Crossref API, please don’t !). example, downloading converting 50 random items (n = 1600) , now, supported Cristin categories (k = 32), takes approximately 3.12 minutes without augmentation, 39.02 minutes DOI/ISBN look-, 177.54 minutes Crossref search enabled. Please note run-time dependent bandwidth response-time API’s (Alma especially high latency), c2z uses exponential backoff depending API response. Please report bugs/issues/requests , feel make pull request.","code":""},{"path":"https://oeysan.github.io/c2z/index.html","id":"coding-conventions","dir":"","previous_headings":"","what":"Coding conventions","title":"A Reference Manager in R","text":"R code seems mash-different styles, adhering Google’s R style guide Tidyverse’s style guide. addition, combine HTML/CSS/JS Markdown, violating Markdown philosophy. ’s thought breach tradition? – “Thank , prefer way.”","code":""},{"path":"https://oeysan.github.io/c2z/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"A Reference Manager in R","text":"Don’t evil. Please read Code Conduct","code":""},{"path":"https://oeysan.github.io/c2z/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"A Reference Manager in R","text":"project licensed MIT License - see LICENSE details","code":""},{"path":"https://oeysan.github.io/c2z/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"A Reference Manager in R","text":"Henrik Karlstrøm work rcristin","code":""},{"path":"https://oeysan.github.io/c2z/paper.html","id":null,"dir":"","previous_headings":"","what":"Summary","title":"Summary","text":"observant reader already identified brilliant word play Psalm 72:8 (King James Version): “shall dominion also sea sea, river unto ends earth”. c2z aims obtaining total dominion Cristin [“Current Research Information SysTem Norway”, @cristin] Zotero [@zotero]. package enables manipulating Zotero libraries using R [@rteam]. Import, batch, references Cristin, regjeringen., CRAN, ISBN (currently, Alma Library Congress), DOI (currently, CrossRef DataCite) Zotero library. Add, edit, copy, delete items, including attachments collections, export references BibLaTeX [@biblatex] formats directly R. documentation see c2z website.","code":""},{"path":"https://oeysan.github.io/c2z/paper.html","id":"statement-of-need","dir":"","previous_headings":"","what":"Statement of need","title":"Summary","text":"Prior c2z exists R package can fully manipulate Zotero libraries. @refmanager created excellent package , among multiple functionalities, import references Zotero. However, RefManageR lacks ability write Zotero library. Two, seemingly abandoned, specialized packages [@zoterro; @zoteror] aim control Zotero library. Unfortunately, packages currently working properly. Thus, c2z present fully fledged R package natively work Zotero R. Furthermore, Norwegian researchers, students, others, c2z provides much-needed tool access, export batch, vast amount (n = 1,978,305, time writing) references stored Cristin, regardless programming platform.","code":""},{"path":"https://oeysan.github.io/c2z/paper.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Summary","text":"Henrik Karlstrøm @rcristin work rcristin.","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/Cristin.html","id":null,"dir":"Reference","previous_headings":"","what":"Search Cristin API — Cristin","title":"Search Cristin API — Cristin","text":"Use search parameters Cristin API return results  tibble. See CristinWrangler","code":""},{"path":"https://oeysan.github.io/c2z/reference/Cristin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search Cristin API — Cristin","text":"","code":"Cristin(   id = NULL,   doi = NULL,   title = NULL,   contributor = NULL,   issn = NULL,   unit = NULL,   institution = NULL,   user = NULL,   category = NULL,   published_since = NULL,   published_before = NULL,   created_since = NULL,   created_before = NULL,   modified_since = NULL,   modified_before = NULL,   year_reported = NULL,   project_code = NULL,   funding_source = NULL,   funding = NULL,   lang = NULL,   page = 1,   per_page = 1000,   max.results = NULL,   no.results = FALSE,   sort = NULL,   filter = NULL,   fields = \"all\",   open.query = NULL,   all.results = TRUE,   force = FALSE,   debug = FALSE,   silent = FALSE,   base.url = \"https://api.cristin.no/v2/results\",   custom.url = NULL,   zotero = NULL,   zotero.import = TRUE,   zotero.check = TRUE,   use.identifiers = TRUE,   crossref.search = FALSE,   autosearch = TRUE,   remove.na = TRUE,   replace.na = \"book\",   force.type = NULL,   override = FALSE,   polite = TRUE,   log = list() )"},{"path":"https://oeysan.github.io/c2z/reference/Cristin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search Cristin API — Cristin","text":"id Cristin id result, Default: NULL doi DOI name (e.g. doi=10.1000/123456), Default: NULL title title result, Default: NULL contributor Author's name Cristin person id, Default: NULL issn issn result, Default: NULL unit Id (e.g. unit=185.53.18.10), Default: NULL institution Id (one number, e.g. institution=185), name acronym institution contributors belong , Default: NULL user person's username Cristin together institution id separated colon (e.g., `askeladd:185`), Default: NULL category Result category code, Default: NULL published_since Results published since inclusive given year, (yyyy), Default: NULL published_before Results published inclusive given year, (yyyy), Default: NULL created_since Results created since inclusive given date, (yyyy-mm-dd), Default: NULL created_before Results created inclusive given date, (yyyy-mm-dd), Default: NULL modified_since Results modified since inclusive given date, (yyyy-mm-dd), Default: NULL modified_before Results modified inclusive given date, (yyyy-mm-dd), Default: NULL year_reported year result reported, Default: NULL project_code Project code internal reference number used funding source, Default: NULL funding_source Funding source code e.g: NFR, Default: NULL funding Funding source code e.g: NFR, project_code together separated colon (e.g., NFR:1234), Default: NULL lang Two letter language code, Default: NULL page Page number. See pagination, Default: 1 per_page Number items per page (1000 max). See pagination, Default: 1000 max.results need limit?, Default: NULL .results need number results?, Default: FALSE sort Sorts `category` /`year_published`. See search sort. Default sort order `cristin_result_id` ascending order, Default: NULL filter Vector cateogries include results. See category code, Default: NULL fields `fields = ` gives list result objects available fields. parameter omitted, list result summaries fewer fields returned, Default: open.query Define query terms, Default: NULL .results Find results query, Default: TRUE force Force seldom wise, sometimes..., Default: FALSE debug Let test Cristin API errors, Default: FALSE silent c2z noisy, tell quiet, Default: FALSE base.url base url Cristin API, Default: https://api.cristin./v2/results custom.url Define Cristin API url, Default: NULL zotero list information specified Zotero library (e.g., id, API key, collections, items), Default: NULL zotero.import Use CristinWrangler wrangle metadata acceptable format Zotero, Default: TRUE zotero.check Check Cristin references already stored Zotero, Default: TRUE use.identifiers Use ISBN/DOI identifiers enabled, Default: TRUE crossref.search Query Crossref database based title, authors, date enabled, Default: FALSE autosearch Results automatically evaluated (based logic) inspect manually set FALSE, Default: TRUE remove.na Cristin contains many, less, obscure categories, (yet) supported. default removed, however, option set FALSE unsupported categories treated according replace.na, Default: TRUE replace.na May odds favor replace unsupported categories predefined itemType remove.na set false, Default: 'book' force.type Force items predefined itemType, Default: NULL override Put faith algorithms identifiers (.e., DOI/ISNB) override reported Cristin, Default: FALSE polite Please store email `.Renviron` query Crossref, Default: TRUE log list storing log elements, Default: list()","code":""},{"path":"https://oeysan.github.io/c2z/reference/Cristin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search Cristin API — Cristin","text":"list (exported) items Cristin","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/CristinSupported.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for supported export formats from Cristin to Zotero — CristinSupported","title":"Check for supported export formats from Cristin to Zotero — CristinSupported","text":"Used filter Cristin categories supported","code":""},{"path":"https://oeysan.github.io/c2z/reference/CristinSupported.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for supported export formats from Cristin to Zotero — CristinSupported","text":"","code":"CristinSupported(data = NULL)"},{"path":"https://oeysan.github.io/c2z/reference/CristinSupported.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for supported export formats from Cristin to Zotero — CristinSupported","text":"data Zotero-type matrix, Default: NULL","code":""},{"path":"https://oeysan.github.io/c2z/reference/CristinSupported.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for supported export formats from Cristin to Zotero — CristinSupported","text":"Zotero supported items unsupported categories NA","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/CristinWrangler.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrangle Cristin metadata into Zotero-type format — CristinWrangler","title":"Wrangle Cristin metadata into Zotero-type format — CristinWrangler","text":"little engine , least try, wrangle metadata Cristin Zotero-type matrix. References can augmented, replaced metadata gathered ISBN DOI identifiers, Crossref queries fails. , hope best place misguided faith ability researchers correctly register publications.","code":""},{"path":"https://oeysan.github.io/c2z/reference/CristinWrangler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrangle Cristin metadata into Zotero-type format — CristinWrangler","text":"","code":"CristinWrangler(   data,   zotero.check = TRUE,   zotero = NULL,   use.identifiers = TRUE,   crossref.search = FALSE,   autosearch = TRUE,   remove.na = TRUE,   replace.na = \"book\",   force.type = NULL,   override = FALSE,   silent = FALSE,   polite = TRUE,   log = list() )"},{"path":"https://oeysan.github.io/c2z/reference/CristinWrangler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrangle Cristin metadata into Zotero-type format — CristinWrangler","text":"data Tibble containing metadata Cristin zotero.check function look duplicates?, Default: TRUE zotero List Zotero information used check duplicates, Default: NULL use.identifiers Use ISBN/DOI identifiers enabled, Default: TRUE crossref.search Query Crossref database based title, authors, date enabled, Default: FALSE autosearch Results automatically evaluated (based logic) inspect manually set FALSE, Default: TRUE remove.na Cristin contains many, less, obscure categories, (yet) supported. default removed, however, option set FALSE unsupported categories treated according replace.na, Default: TRUE replace.na May odds favor replace unsupported categories predefined itemType remove.na set false, Default: 'book' force.type Force items predefined itemType, Default: NULL override Put faith algorithms identifiers (.e., DOI/ISNB) override reported Cristin, Default: FALSE silent Running silent, running deep, Default: FALSE polite Please store email `.Renviron` query Crossref, Default: TRUE log list storing log elements, Default: list()","code":""},{"path":"https://oeysan.github.io/c2z/reference/CristinWrangler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrangle Cristin metadata into Zotero-type format — CristinWrangler","text":"Zotero-type matrix (tibble)","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/DoiCrossref.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrangle CrossRef metadata into Zotero-type format — DoiCrossref","title":"Wrangle CrossRef metadata into Zotero-type format — DoiCrossref","text":"Query CrossRef DOI fetch metadata","code":""},{"path":"https://oeysan.github.io/c2z/reference/DoiCrossref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrangle CrossRef metadata into Zotero-type format — DoiCrossref","text":"","code":"DoiCrossref(data, meta = list())"},{"path":"https://oeysan.github.io/c2z/reference/DoiCrossref.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrangle CrossRef metadata into Zotero-type format — DoiCrossref","text":"data XML data CrossRef containing metadata meta list collecting metadata used create , Default: list()","code":""},{"path":"https://oeysan.github.io/c2z/reference/DoiCrossref.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrangle CrossRef metadata into Zotero-type format — DoiCrossref","text":"Zotero-type matrix (tibble)","code":""},{"path":"https://oeysan.github.io/c2z/reference/DoiDatacite.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrangle DataCite metadata into Zotero-type format — DoiDatacite","title":"Wrangle DataCite metadata into Zotero-type format — DoiDatacite","text":"Query DataCite DOI fetch metadata","code":""},{"path":"https://oeysan.github.io/c2z/reference/DoiDatacite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrangle DataCite metadata into Zotero-type format — DoiDatacite","text":"","code":"DoiDatacite(data, meta)"},{"path":"https://oeysan.github.io/c2z/reference/DoiDatacite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrangle DataCite metadata into Zotero-type format — DoiDatacite","text":"data XML data DataCite containing metadata meta list collecting metadata used create , Default: list()","code":""},{"path":"https://oeysan.github.io/c2z/reference/DoiDatacite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrangle DataCite metadata into Zotero-type format — DoiDatacite","text":"Zotero-type matrix (tibble)","code":""},{"path":"https://oeysan.github.io/c2z/reference/Zotero.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to Zotero API — Zotero","title":"Connect to Zotero API — Zotero","text":"Wrapper connect Zotero API main functions *c2z*","code":""},{"path":"https://oeysan.github.io/c2z/reference/Zotero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to Zotero API — Zotero","text":"","code":"Zotero(   collection.names = NULL,   collection.key = NULL,   collection.path = NULL,   item.key = NULL,   library = FALSE,   case.insensitive = TRUE,   ancestor = FALSE,   recursive = FALSE,   create = FALSE,   limit = 100,   start = 0,   item.type = NULL,   all.results = TRUE,   max.results = NULL,   add = TRUE,   items = NULL,   doi = NULL,   isbn = NULL,   export = FALSE,   csl.type = NULL,   csl.name = \"style\",   format = \"biblatex\",   save.data = FALSE,   save.path = NULL,   bib.name = \"references\",   append = FALSE,   include = NULL,   style = \"apa\",   locale = \"en-US\",   copy = FALSE,   copy.collections = TRUE,   copy.items = TRUE,   copy.extras = TRUE,   remove.missing = TRUE,   change.library = FALSE,   copy.user = TRUE,   copy.id = NULL,   copy.api = NULL,   post = FALSE,   post.collections = TRUE,   post.items = TRUE,   post.attachments = TRUE,   post.limit = 50,   delete = FALSE,   delete.collections = FALSE,   delete.items = FALSE,   delete.limit = 50,   ragnarok = FALSE,   user = TRUE,   index = FALSE,   id = NULL,   api = NULL,   force = FALSE,   base.url = \"https://api.zotero.org\",   debug = FALSE,   silent = FALSE,   zotero = NULL,   log = list() )"},{"path":"https://oeysan.github.io/c2z/reference/Zotero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to Zotero API — Zotero","text":"collection.names Vector collection names create search , Default: NULL collection.key specified collection key, Default: NULL collection.path Vector nested collection keys, Default: NULL item.key specified item key, Default: NULL library Use `ZoteroLibrary` fetch collections items, Default: FALSE case.insensitive Disregard letter casing searching collections, Default: TRUE ancestor Trace lineage collection (.e., find top-level collection), Default: FALSE recursive Find nested collections, Default: FALSE create Create missing collections, Default: FALSE limit Number results per query (max 100), Default: 100 start Starting position query (0 = first result), Default: 0 item.type Items search (NULL = everything), Default: NULL .results Find results query, Default: TRUE max.results need limit?, Default: NULL add Use `ZoteroAdd` add items Zotero list, Default: TRUE items Predefined metadata (tibble), Default: NULL doi Use ZoteroDoi fetch DOI metadata, Default: NULL isbn Use ZoteroIsbn fetch ISBN metadata, Default: NULL export Use `ZoteroExport` export items, Default: FALSE csl.type Specify CSL type Official repository Citation Style Language (CSL), Default: NULL csl.name Name saved CSL file, Default: 'style' format Export format Zotero items, Default: 'biblatex' save.data Save data (e.g., bibliography) disk, Default: FALSE save.path Location store data disk, Default: NULL bib.name Name exported bibliography, Default: 'references' append Append extra metadata Zotero query, Default: FALSE include Include bibliography (.e., `bib`) /citation (.e., `citation`), Default: NULL style Citation style use appended bibliography /citations, Default: apa locale Desired language format bibliography, Default: 'en-US' copy Use `ZoteroCopy` delete collections /items, Default: FALSE copy.collections Try copy specified collections, Default: TRUE copy.items Try copy specified items?, Default: TRUE copy.extras Try copy specified extras (.e., attachments notes)?, Default: TRUE remove.missing Deleted missing extras, Default: TRUE change.library Stage changing library (e.g., group personal library), Default: FALSE copy.user Nre user type (functions use `group` prefix FALSE), Default: TRUE copy.id New id, Default: NULL copy.api New API key, Default: NULL post Use `ZoteroPost` post collections /items, Default: FALSE post.collections Try copy specified collections, Default: TRUE post.items Try copy specified items?, Default: TRUE post.attachments Try copy specified extras (.e., attachments notes)?, Default: TRUE post.limit Number collections/items post per request (max 50), Default: 50 delete Use `ZoteroDelete` delete collections /items, Default: FALSE delete.collections Try delete specified collections, Default: TRUE delete.items Try delete specified items?, Default: TRUE delete.limit Number collections/items delete per request (max 50), Default: 50 ragnarok Delete EVERYTHING specified library, Default: FALSE user User type (functions use `group` prefix FALSE), Default: TRUE index Create index items, Default: FALSE id User group ID, Default: NULL api API key connect Zotero library. See README, Default: NULL force Force seldom wise, sometimes..., Default: FALSE base.url Base url Zotero API, Default: 'https://api.zotero.org' debug Let test Zotero API errors, Default: FALSE silent c2z noisy, tell quiet, Default: FALSE zotero list information specified Zotero library (e.g., id, API key, collections, items), Default: NULL log list storing log elements, Default: list()","code":""},{"path":"https://oeysan.github.io/c2z/reference/Zotero.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to Zotero API — Zotero","text":"list information specified Zotero library (e.g., id, API key, collections, items)","code":""},{"path":"https://oeysan.github.io/c2z/reference/Zotero.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to Zotero API — Zotero","text":"Please see https://oeysan.github.io/c2z/","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/ZoteroAdd.html","id":null,"dir":"Reference","previous_headings":"","what":"Add items to Zotero list — ZoteroAdd","title":"Add items to Zotero list — ZoteroAdd","text":"Use identifiers predefined data add Zotero list","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroAdd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add items to Zotero list — ZoteroAdd","text":"","code":"ZoteroAdd(zotero, items = NULL, doi = NULL, isbn = NULL, silent = FALSE)"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroAdd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add items to Zotero list — ZoteroAdd","text":"zotero list information specified Zotero library (e.g., id, API key, collections, items) items Predefined metadata (tibble), Default: NULL doi Use ZoteroDoi fetch DOI metadata, Default: NULL isbn Use ZoteroIsbn fetch ISBN metadata, Default: NULL silent c2z noisy, tell quiet, Default: FALSE","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroAdd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add items to Zotero list — ZoteroAdd","text":"add data Zotero list","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCheck.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Zotero library for duplicates — ZoteroCheck","title":"Check Zotero library for duplicates — ZoteroCheck","text":"Remove references modified since last added Zotero","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCheck.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Zotero library for duplicates — ZoteroCheck","text":"","code":"ZoteroCheck(   data,   id,   id.type,   created,   last.modified,   zotero = NULL,   silent = FALSE,   log = list() )"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCheck.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Zotero library for duplicates — ZoteroCheck","text":"data Tibble containing metadata (Cristin) id column containing identifier (e.g., cristin_result_id) id.type Type metadata found Zotero extra field (\"e.g., Cristin) created column containing creation date UNIX timestamp format (e.g., created) last.modified column containing modifcation date UNIX timestamp format (e.g., last_modified) zotero list information specified Zotero library (e.g., id, API key, collections, items), Default: NULL silent c2z noisy, tell quiet, Default: FALSE log list storing log elements, Default: list()","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCheck.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Zotero library for duplicates — ZoteroCheck","text":"Returns non-duplicated data Zotero-type matrix (tibble)","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCopy.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy collections and items from a Zotero library — ZoteroCopy","title":"Copy collections and items from a Zotero library — ZoteroCopy","text":"Replace key identifiers new ones keeping existing structure relationship collections items","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCopy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy collections and items from a Zotero library — ZoteroCopy","text":"","code":"ZoteroCopy(   zotero,   copy.collections = TRUE,   copy.items = TRUE,   copy.extras = TRUE,   remove.missing = TRUE,   change.library = FALSE,   copy.user = TRUE,   copy.id = NULL,   copy.api = NULL,   silent = FALSE )"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCopy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy collections and items from a Zotero library — ZoteroCopy","text":"zotero list information specified Zotero library (e.g., id, API key, collections, items) copy.collections Try copy specified collections, Default: TRUE copy.items Try copy specified items?, Default: TRUE copy.extras Try copy specified extras (.e., attachments notes)?, Default: TRUE remove.missing Deleted missing extras, Default: TRUE change.library Stage changing library (e.g., group personal library), Default: FALSE copy.user Nre user type (functions use `group` prefix FALSE), Default: TRUE copy.id New id, Default: NULL copy.api New API key, Default: NULL silent c2z noisy, tell quiet, Default: FALSE","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCopy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy collections and items from a Zotero library — ZoteroCopy","text":"list information specified Zotero library (e.g., copied collections items)","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCran.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrangle CRAN metadata into Zotero-type format — ZoteroCran","title":"Wrangle CRAN metadata into Zotero-type format — ZoteroCran","text":"Query CRAN name fetch metadata","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCran.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrangle CRAN metadata into Zotero-type format — ZoteroCran","text":"","code":"ZoteroCran(id, meta = list())"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCran.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrangle CRAN metadata into Zotero-type format — ZoteroCran","text":"id name R package meta list collecting metadata used create , Default: list()","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCran.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrangle CRAN metadata into Zotero-type format — ZoteroCran","text":"Zotero-type matrix (tibble)","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/ZoteroDelete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete collections and items from a Zotero library — ZoteroDelete","title":"Delete collections and items from a Zotero library — ZoteroDelete","text":"Cleaning Zotero library","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroDelete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete collections and items from a Zotero library — ZoteroDelete","text":"","code":"ZoteroDelete(   zotero,   delete.collections = FALSE,   delete.items = FALSE,   delete.limit = 50,   force = FALSE,   ragnarok = FALSE,   silent = FALSE )"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroDelete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete collections and items from a Zotero library — ZoteroDelete","text":"zotero list information specified Zotero library (e.g., id, API key, collections, items) delete.collections Try delete specified collections, Default: TRUE delete.items Try delete specified items?, Default: TRUE delete.limit Number collections/items delete per request (max 50), Default: 50 force Force seldom wise, sometimes..., Default: FALSE ragnarok Delete EVERYTHING specified library, Default: FALSE silent c2z noisy, tell quiet, Default: FALSE","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroDelete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete collections and items from a Zotero library — ZoteroDelete","text":"list information specified Zotero library (e.g., deleted collections items)","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/ZoteroDoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Use DOI to acquire metadata — ZoteroDoi","title":"Use DOI to acquire metadata — ZoteroDoi","text":"Connects doi.org create metadata","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroDoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use DOI to acquire metadata — ZoteroDoi","text":"","code":"ZoteroDoi(doi, meta = list())"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroDoi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use DOI to acquire metadata — ZoteroDoi","text":"doi digital object identifier meta list collecting metadata used create , Default: list()","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroDoi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use DOI to acquire metadata — ZoteroDoi","text":"Zotero-type matrix (tibble)","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/ZoteroExport.html","id":null,"dir":"Reference","previous_headings":"","what":"Export Zotero items to bibliography — ZoteroExport","title":"Export Zotero items to bibliography — ZoteroExport","text":"Export Zotero items specified format (e.g., BibLaTeX) using CSL format (e.g., APA7)","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroExport.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Zotero items to bibliography — ZoteroExport","text":"","code":"ZoteroExport(   zotero,   csl.type = NULL,   csl.name = \"style\",   locale = \"en-US\",   format = \"biblatex\",   bib.name = \"references\",   append = FALSE,   include = NULL,   style = \"apa\",   save.data = FALSE,   save.path = NULL,   silent = FALSE )"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroExport.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export Zotero items to bibliography — ZoteroExport","text":"zotero list information specified Zotero library (e.g., id, API key, collections, items) csl.type Specify CSL type Official repository Citation Style Language (CSL), Default: NULL csl.name Name saved CSL file, Default: 'style' locale Desired language format bibliography, Default: 'en-US' format Export format Zotero items, Default: 'biblatex' bib.name Name exported bibliography, Default: 'references' append Append extra metadata Zotero query, Default: FALSE include Include bibliography (.e., `bib`) /citation (.e., `citation`), Default: NULL style Citation style use appended bibliography /citations, Default: apa save.data Save data (e.g., bibliography) disk, Default: FALSE save.path Location store data disk, Default: NULL silent c2z noisy, tell quiet, Default: FALSE","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroExport.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export Zotero items to bibliography — ZoteroExport","text":"list information specified Zotero library (e.g., exported items, bibliography citations)","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/ZoteroGet.html","id":null,"dir":"Reference","previous_headings":"","what":"Get collections and items from a Zotero library — ZoteroGet","title":"Get collections and items from a Zotero library — ZoteroGet","text":"Get","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroGet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get collections and items from a Zotero library — ZoteroGet","text":"","code":"ZoteroGet(   zotero,   use.collection = TRUE,   use.item = FALSE,   append.collections = FALSE,   append.items = FALSE,   append.top = FALSE,   append.file = FALSE,   custom.url = NULL,   open.query = NULL,   limit = 100,   start = 0,   format = \"json\",   item.keys = NULL,   collection.keys = NULL,   item.type = NULL,   include = NULL,   style = \"apa\",   locale = \"en-US\",   all.results = TRUE,   max.results = NULL,   force = FALSE,   silent = FALSE )"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroGet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get collections and items from a Zotero library — ZoteroGet","text":"zotero list information specified Zotero library (e.g., id, API key, collections, items) use.collection Use collection key present Zotero list, Default: TRUE use.item Use item key present Zotero list, Default: FALSE append.collections Append `/collections/` Zotero API url, Default: FALSE append.items Append `/items/` Zotero API url, Default: FALSE append.top Append `/top/` Zotero API url, Default: FALSE append.file Append `/file/` Zotero API url, Default: FALSE custom.url Use custrom Zotero API url, Default: NULL open.query Use query, Default: NULL limit Number results per query (max 100), Default: 100 start Starting position query (0 = first result), Default: 0 format Format reponse Zotero API, Default: 'json' item.keys Specified vector items keys, Default: NULL collection.keys Specified vector collection keys, Default: NULL item.type Items search (NULL = everything), Default: NULL include Include bibliography (.e., `bib`) /citation (.e., `citation`), Default: NULL style Citation style use appended bibliography /citations, Default: apa locale Desired language format bibliography, Default: 'en-US' .results Find results query, Default: TRUE max.results need limit?, Default: NULL force Force seldom wise, sometimes..., Default: FALSE silent c2z noisy, tell quiet, Default: FALSE","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroGet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get collections and items from a Zotero library — ZoteroGet","text":"list information specified Zotero library (e.g., collections items)","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/ZoteroGov.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrangle regjeringen.no metadata into Zotero-type format — ZoteroGov","title":"Wrangle regjeringen.no metadata into Zotero-type format — ZoteroGov","text":"Query regjeringen search word type fetch metadata","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroGov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrangle regjeringen.no metadata into Zotero-type format — ZoteroGov","text":"","code":"ZoteroGov(search, type = \"NOU\", meta = list())"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroGov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrangle regjeringen.no metadata into Zotero-type format — ZoteroGov","text":"search Search term (e.g., 2018: 2) type type query (e.g., white paper, official norwegian reports), Default: \"NOU\" meta list collecting metadata used create , Default: list()","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroGov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrangle regjeringen.no metadata into Zotero-type format — ZoteroGov","text":"Zotero-type matrix (tibble)","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroGov.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrangle regjeringen.no metadata into Zotero-type format — ZoteroGov","text":"DETAILS","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/ZoteroIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an index of Zotero items — ZoteroIndex","title":"Create an index of Zotero items — ZoteroIndex","text":"function creates index containing key information present Zotero items","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an index of Zotero items — ZoteroIndex","text":"","code":"ZoteroIndex(data)"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an index of Zotero items — ZoteroIndex","text":"data Tibble containing Zotero-type metadata (e.g., Cristin)","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroIndex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an index of Zotero items — ZoteroIndex","text":"tibble","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/ZoteroIsbn.html","id":null,"dir":"Reference","previous_headings":"","what":"Search libraries using ISBN or MMS ID — ZoteroIsbn","title":"Search libraries using ISBN or MMS ID — ZoteroIsbn","text":"Query libraries using ISBN (MMS ID) fetch metadata","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroIsbn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search libraries using ISBN or MMS ID — ZoteroIsbn","text":"","code":"ZoteroIsbn(key, meta = list())"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroIsbn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search libraries using ISBN or MMS ID — ZoteroIsbn","text":"key Key search (e.g., ISBN MMS ID) meta list collecting metadata used create , Default: list()","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroIsbn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search libraries using ISBN or MMS ID — ZoteroIsbn","text":"Zotero-type matrix (tibble)","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/ZoteroLibrary.html","id":null,"dir":"Reference","previous_headings":"","what":"Access the Zotero library — ZoteroLibrary","title":"Access the Zotero library — ZoteroLibrary","text":"function uses information stored `zotero` list access specified collections items Zotero library","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroLibrary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access the Zotero library — ZoteroLibrary","text":"","code":"ZoteroLibrary(   zotero,   case.insensitive = TRUE,   ancestor = FALSE,   recursive = FALSE,   create = FALSE,   limit = 100,   start = 0,   item.type = NULL,   all.results = TRUE,   max.results = NULL,   force = FALSE,   silent = FALSE )"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroLibrary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access the Zotero library — ZoteroLibrary","text":"zotero list information specified Zotero library (e.g., id, API key, collections, items) case.insensitive Disregard letter casing searching collections, Default: TRUE ancestor Trace lineage collection (.e., find top-level collection), Default: FALSE recursive Find nested collections, Default: FALSE create Create missing collections, Default: FALSE limit Number results per query (max 100), Default: 100 start Starting position query (0 = first result), Default: 0 item.type Items search (NULL = everything), Default: NULL .results Find results query, Default: TRUE max.results need limit?, Default: NULL force Force seldom wise, sometimes..., Default: FALSE silent c2z noisy, tell quiet, Default: FALSE","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroLibrary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access the Zotero library — ZoteroLibrary","text":"list information specified Zotero library (e.g., collections items)","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/ZoteroMatch.html","id":null,"dir":"Reference","previous_headings":"","what":"Search or match items using CrossRef — ZoteroMatch","title":"Search or match items using CrossRef — ZoteroMatch","text":"Use CrossRef API match data (e.g., Cristin metdata Crossref metadata) search title, authors date","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroMatch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search or match items using CrossRef — ZoteroMatch","text":"","code":"ZoteroMatch(   title,   authors,   date,   haystack = NULL,   haystack.size = 3,   crossref.search = FALSE,   autosearch = FALSE,   cristin.data = NULL,   external.data = NULL,   polite = TRUE,   log = list() )"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroMatch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search or match items using CrossRef — ZoteroMatch","text":"title Title reference authors creators reference date publication date reference haystack Potential matches search term (.e., needle), Default: NULL haystack.size Number items haystack, Default: 3 crossref.search Search CrossRef needle found haystack, Default: FALSE autosearch Match automatically compare needle haystack, Default: FALSE cristin.data Metadata Cristin, Default: NULL external.data Metadata external source (e.g., CrossRef), Default: NULL polite use email stored `.Renviron`, Default: TRUE log list storing log elements, Default: list()","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroMatch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search or match items using CrossRef — ZoteroMatch","text":"Zotero-type matrix (tibble) match found otherwise NULL","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/ZoteroPost.html","id":null,"dir":"Reference","previous_headings":"","what":"Post collections and items to a Zotero library — ZoteroPost","title":"Post collections and items to a Zotero library — ZoteroPost","text":"Create update collections items specified library","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroPost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post collections and items to a Zotero library — ZoteroPost","text":"","code":"ZoteroPost(   zotero,   post.collections = TRUE,   post.items = TRUE,   post.attachments = TRUE,   post.limit = 50,   force = FALSE,   silent = FALSE )"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroPost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post collections and items to a Zotero library — ZoteroPost","text":"zotero list information specified Zotero library (e.g., id, API key, collections, items) post.collections Try copy specified collections, Default: TRUE post.items Try copy specified items?, Default: TRUE post.attachments Try copy specified extras (.e., attachments notes)?, Default: TRUE post.limit Number collections/items post per request (max 50), Default: 50 force Force seldom wise, sometimes..., Default: FALSE silent c2z noisy, tell quiet, Default: FALSE","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroPost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post collections and items to a Zotero library — ZoteroPost","text":"list information specified Zotero library (e.g., posted collections items)","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/cristin.types.html","id":null,"dir":"Reference","previous_headings":"","what":"List with empty cristin-items — cristin.types","title":"List with empty cristin-items — cristin.types","text":"tibble list represents cristin-item","code":""},{"path":"https://oeysan.github.io/c2z/reference/cristin.types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List with empty cristin-items — cristin.types","text":"","code":"cristin.types"},{"path":"https://oeysan.github.io/c2z/reference/cristin.types.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List with empty cristin-items — cristin.types","text":"list 70 tibbles zero rows various columns","code":""},{"path":"https://oeysan.github.io/c2z/reference/cristin.types.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List with empty cristin-items — cristin.types","text":"Used create Zotero-items list metadata","code":""},{"path":"https://oeysan.github.io/c2z/reference/zotero.types.html","id":null,"dir":"Reference","previous_headings":"","what":"List with empty zotero-items — zotero.types","title":"List with empty zotero-items — zotero.types","text":"tibble list represents zotero-item","code":""},{"path":"https://oeysan.github.io/c2z/reference/zotero.types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List with empty zotero-items — zotero.types","text":"","code":"zotero.types"},{"path":"https://oeysan.github.io/c2z/reference/zotero.types.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List with empty zotero-items — zotero.types","text":"list 36 tibbles zero rows various columns","code":""},{"path":"https://oeysan.github.io/c2z/reference/zotero.types.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List with empty zotero-items — zotero.types","text":"Used create Zotero-items list metadata","code":""},{"path":"https://oeysan.github.io/c2z/news/index.html","id":"c2z-010","dir":"Changelog","previous_headings":"","what":"c2z 0.1.0","title":"c2z 0.1.0","text":"Add, edit, copy, delete (nested) Zotero collections. Add, edit, copy, delete Zotero items, including attachments. Export Zotero items R BibLaTeX (formats). Currently supported formats: books (e.g., monographs, anthologies), book chapters, journal articles, presentations (e.g., lectures), opinions pieces. Currently supported formats: books, book chapters, conference papers, journal articles (Batch) import Norwegian white papers (.e., Meld. St., St.meld.) official Norwegian reports (.e., NOU). Batch import R packages CRAN. Search CrossRef, automatically manually, author(s), title, year. Augment Cristin references ISBN, DOI, CrossRef search. Added https://oeysan.github.io/c2z/ documentation Added NEWS.md file track changes package. Added TODO.md file track future work package. Added README.md file introduction package. Added CONDUCT.md people nice. Added badge.webp just ","code":""}]
