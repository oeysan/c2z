[{"path":"https://oeysan.github.io/c2z/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://oeysan.github.io/c2z/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Øystein Olav Skaar Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://oeysan.github.io/c2z/TODO.html","id":null,"dir":"","previous_headings":"","what":"TODO","title":"TODO","text":"Add support Cristin categories (e.g., interviews) Make ZoteroIsbn ZoteroDoi less convoluted Add support categories using identifiers (e.g., thesis ISBN) Create elegant system copying Zotero items Look possibility adding pdfs adding ISBN/DOI/Cristin Look possibility adding function identifying retracted publications Prepare migration Cris (Current research information system)","code":""},{"path":"https://oeysan.github.io/c2z/TODO.html","id":"archive","dir":"","previous_headings":"","what":"Archive","title":"TODO","text":"Make handling API status codes consistent throughout package Integrate DOI (DataCite) Integrate Cristin API Integrate DOI (CrossRef) Integrate ISBN / Marc 21 (Alma / Loc) Integrate Zotero api","code":""},{"path":"https://oeysan.github.io/c2z/articles/c2z_public.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Public library","text":"Sagan, C. (1980). Cosmos. Ballantine Books.","code":""},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"collections","dir":"Articles","previous_headings":"","what":"Collections","title":"Behold c2z!","text":"computer desktop reveals D&D alignment. Similarly, way structure Zotero library collections reveals personality. (Chaotic neutral using collections, obviously.) c2z lets create nested collections whim, seen .","code":""},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"creating-collections","dir":"Articles","previous_headings":"Collections","what":"Creating collections","title":"Behold c2z!","text":"example define vector nine elements based “quick brown fox jumps lazy dog”. use Zotero function, wrapper connects Zotero API combines major functions c2z, create nine nested collections based string (.e., “dog” nested “lazy” nested “” et cetera). set library = TRUE, thereby querying Zotero library, create = TRUE create collections exist (.e., nine collections). recursive action, let’s keep noise minimum set silent = TRUE.","code":"# Let's create a vector of nested collections collection.names <- c(   \"The\", \"quick\", \"brown\", \"fox\", \"jumps\", \"over\", \"the\", \"lazy\", \"dog\"   )  # Create the collections create.collections <- Zotero(   collection.names = collection.names,   library = TRUE,   create = TRUE,   silent = TRUE )"},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"using-collections","dir":"Articles","previous_headings":"Collections","what":"Using collections","title":"Behold c2z!","text":"Now created collections, can access collections different ways. default, function find last element vector (.e., “dog”). However, often want access , , nested collections. can achieve using two different approaches. 1) using recursive = TRUE access given element recursively find nested collections, 2) using ancestor = TRUE trace lineage specified collection. may use collection.name (don’t several top-level collections name, ? , function select newest collection specified name), collection.key keep track things. c2z default look collections names regardless letter case, important set case.insensitive = FALSE.","code":"# Dog create.collections$collections  |>   dplyr::select(c(key, name, parentCollection)) #> # A tibble: 1 × 3 #>   key      name  parentCollection #>   <chr>    <chr> <chr>            #> 1 Y6CZ8PQ9 dog   6DIEZZEJ"},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"all-collections","dir":"Articles","previous_headings":"Collections > Using collections","what":"All collections","title":"Behold c2z!","text":"","code":"# Find collections collections <- Zotero(   collection.names = \"The\",   case.insensitive = TRUE,   recursive = TRUE,   library = TRUE,   silent = TRUE )  # print collections collections$collections |>   dplyr::select(c(key, name, parentCollection)) #> # A tibble: 9 × 3 #>   key      name  parentCollection #>   <chr>    <chr> <chr>            #> 1 Y6CZ8PQ9 dog   6DIEZZEJ         #> 2 2UZ8D3SF the   P4527NK3         #> 3 INX272R9 fox   N8Y7ANBY         #> 4 N8Y7ANBY brown GE36M75R         #> 5 6DIEZZEJ lazy  2UZ8D3SF         #> 6 P4527NK3 over  ZYKUUCS3         #> 7 ZYKUUCS3 jumps INX272R9         #> 8 GE36M75R quick PDX5A66Q         #> 9 PDX5A66Q The   FALSE"},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"recursive-path","dir":"Articles","previous_headings":"Collections > Using collections","what":"Recursive path","title":"Behold c2z!","text":"","code":"# Find collections recursive <- Zotero(   collection.names = c(\"The\", \"quick\", \"brown\"),   recursive = TRUE,   library = TRUE,   silent = TRUE )  # print collections recursive$collections |>   dplyr::select(name) #> # A tibble: 7 × 1 #>   name  #>   <chr> #> 1 dog   #> 2 the   #> 3 fox   #> 4 brown #> 5 lazy  #> 6 over  #> 7 jumps"},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"ancestor-path","dir":"Articles","previous_headings":"Collections > Using collections","what":"Ancestor path","title":"Behold c2z!","text":"","code":"# Find collections ancestor <- Zotero(   collection.names = c(\"The\", \"quick\", \"brown\", \"fox\"),   ancestor = TRUE,   library = TRUE,   silent = TRUE )  # print collections ancestor$collections |>   dplyr::select(name) #> # A tibble: 4 × 1 #>   name  #>   <chr> #> 1 fox   #> 2 brown #> 3 quick #> 4 The"},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"items","dir":"Articles","previous_headings":"","what":"Items","title":"Behold c2z!","text":"Okay, ’ve created bunch collections. Kinda cool, guess? collections somewhat pointless without items. Sooo, lets add items!","code":""},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"adding-items-from-cristin","dir":"Articles","previous_headings":"Items","what":"Adding items from Cristin","title":"Behold c2z!","text":"One motivation develop c2z attempt making registering data Cristin feel useful. following example Cristin function gather publications containing word “cheese”, published since 2020 (good year cheese, probably). zotero.import set TRUE, indicating function use CristinWrangler convert Cristin metadata acceptable format Zotero. use.identifiers = TRUE function therefore use identifiers (.e., ISBN DOI) augment metadata. items posted Zotero library using Zotero, items uploaded using items argument. index = TRUE, creating index items. Rather finicking h-indexes impact factors, Norwegians weird obsession NVI (Norwegian Science Index), two-level index level one publications ordinary level two great (probably makes sense). However, Cristin simple method filtering publications qualify two levels. specified filter arguments try filter categories usually contain publications worthy NVI (see Cristin categories). Let’s post results collection “fox”, using argument get.items = FALSE add items collection Zotero list. second example decided 2019 even better year cheese change published_since argument 2019. reason demonstrate duplicate function Cristin, identify Cristin references imported Zotero zotero.check = TRUE. function try use zotero argument search specified collection(s).","code":"# Filter items cristin.filter <- c(   \"ACADEMICREVIEW\",   \"ARTICLEJOURNAL\",   \"ARTICLE\",    \"ANTHOLOGYACA\",    \"CHAPTER\",    \"CHAPTERACADEMIC\",   \"CHAPTERARTICLE\",   \"COMMENTARYACA\",   \"MONOGRAPHACA\" )  # Query Cristin cristin <- Cristin(   title = \"cheese\",   published_since = 2020,   published_before = 2021,   filter = cristin.filter,   zotero.import = TRUE,   use.identifiers = TRUE,   silent = FALSE ) #> Found 15 results  #> Checking whether references are supported. See `CristinSupported()`  #> Looking for missing data  #> Filtered out 9 results  #> Sequential processing. Converting 6 items to Zotero format (began 10.04.2025 - 18:52:47)  #> Duration: 00:00:18.311 (ended 10.04.2025 - 18:53:05)  # Get the fox key fox <- collections$collections |>    dplyr::filter(name == \"fox\") |>    dplyr::pull(\"key\")  # Post the items to the collection called fox post.cristin <- Zotero(   collection.key = fox,   metadata = cristin$results,   library = TRUE,   index = TRUE,   post = TRUE,   post.collections = FALSE,   post.items = TRUE,   silent = TRUE )  # Select only names in index and print post.cristin$index |>    dplyr::select(name) |>   print(width = 80) #> # A tibble: 6 × 1 #>   name                                                                           #>   <chr>                                                                          #> 1 Lundberg et al. (2021) Determination of maintenance Jarlsberg® cheese dose to… #> 2 Olsen et al. (2021) Feeding concentrates with different protein sources to hi… #> 3 Lundberg et al. (2020) Increased serum osteocalcin levels and vitamin K statu… #> 4 Henriquez Parodi et al. (2021) Kavli Selling Cheese in a Tube to the World     #> 5 Gaber et al. (2021) Manufacture and characterization of acid-coagulated fresh… #> 6 Wolka et al. (2021) Soil organic carbon and associated soil properties in Ens… # Query Cristin (again) cristin2 <- Cristin(   title = \"cheese\",   published_since = 2019,   published_before = 2021,   filter = cristin.filter,   zotero.import = TRUE,   zotero.check = TRUE,   use.identifiers = FALSE,   zotero = post.cristin ) #> Found 21 results  #> Checking whether references exist in library  #> Removed 6 duplicates  #> Checking whether references are supported. See `CristinSupported()`  #> Looking for missing data  #> Filtered out 9 results  #> Sequential processing. Converting 6 items to Zotero format (began 10.04.2025 - 18:53:07)  #> Duration: 00:00:02.170 (ended 10.04.2025 - 18:53:09)"},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"adding-items-from-identifiers","dir":"Articles","previous_headings":"Items","what":"Adding items from identifiers","title":"Behold c2z!","text":"Sometimes, happens everybody, ’re bunch ISBNs DOIs lying around. Luckily, can easily add Zotero using Zotero wrapper. case adding collection “quick”.","code":"# ISBN isbn.items <- c(\"9780761973836\", \"9788215048451\")  # DOI doi.items <- c(\"https://doi.org/10.31234/osf.io/venu6\",                 \"10.1177/1098214010376532\")  # Post the items to the collections called quick identifiers <- Zotero(   collection.names = c(\"The\", \"quick\"),   isbn = isbn.items,   doi = doi.items,   library = TRUE,   index = TRUE,   post = TRUE,   post.collections = FALSE,   post.items = TRUE,   post.token = FALSE,   silent = TRUE,   get.items = FALSE )  # Select only names in index and print identifiers$index |>    dplyr::select(name) |>   print(width = 80) #> # A tibble: 4 × 1 #>   name                                                                           #>   <chr>                                                                          #> 1 Ong-Dean et al. (2011) Challenges and Dilemmas in Implementing Random Assignm… #> 2 Wijeakumar et al. (2020) Home assessment of visual working memory in pre-scho… #> 3 Field & Hole (2003) How to design and report experiments                       #> 4 Grøholt et al. (2022) Lærebok i barne- og ungdomspsykiatri"},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"adding-items-from-the-man","dir":"Articles","previous_headings":"Items","what":"Adding items from the Man","title":"Behold c2z!","text":"working academia within Norwegian context, frequently need examine musings politicians, selected group researchers. , let’s add random white papers official reports using ZoteroGov.","code":"# Combine to a single tibble using dplyr gov.items <- dplyr::bind_rows(   # Find some random white papers   ZoteroGov(c(\"26 (2001-2002)\", \"31 (2014-2015)\"), type = \"meldst\")$data,   # Finds some random official Norwegian reports.   ZoteroGov(c(\"2014: 4\", \"2018: 2\"), type = \"nou\")$data )  # Post the items to the collection called brown ## Fitting given the source the.man <- Zotero(   collection.names = c(\"The\", \"quick\", \"brown\"),   metadata = gov.items,   library = TRUE,   index  = TRUE,   post = TRUE,   post.collections = FALSE,   post.items = TRUE,   post.token = FALSE,   silent = TRUE,   get.items = FALSE )  # Select only names in index and print the.man$index |>    dplyr::select(name) |>   print(width = 80) #> # A tibble: 4 × 1 #>   name                                                            #>   <chr>                                                           #> 1 St.meld. nr. 26 (2001-2002) Bedre kollektivtransport            #> 2 NOU 2014: 4 (2014) Enklere regler – bedre anskaffelser          #> 3 NOU 2018: 2 (2018) Fremtidige kompetansebehov I                 #> 4 Meld. St. 31 (2014–2015) Garden som ressurs – marknaden som mål"},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"adding-items-from-cran","dir":"Articles","previous_headings":"Items","what":"Adding items from CRAN","title":"Behold c2z!","text":"Show love (citations love, yes?) authors create packages use! (see , Hadley Wickham). , ’re using ZoteroCran function collect metadata Comprehensive R Archive Network (CRAN). collection.key defined : key “6DIEZZEJ” argument recursive = TRUE, thus function looking specified collection (.e., “lazy”) children (.e., “dog”). often useful link items several (nested) collections. instance, can create nested collections “project -> CRAN-packages” link items collections. can choose access items “project”, including “CRAN-packages”, just access filed latter.","code":"lazy <- collections$collections |>    dplyr::filter(name == \"lazy\") |>    dplyr::pull(\"key\") # Find selected packages  packages <- c(   \"dplyr\",   \"httr\",   \"jsonlite\",   \"purrr\",   \"rvest\",   \"rlang\",   \"tibble\",   \"tidyr\",   \"tidyselect\" )  # Post the items to the collections called lazy and dog cran <- Zotero(   collection.key = lazy,   metadata = ZoteroCran(packages)$data,   library = TRUE,   index = TRUE,   recursive = TRUE,   post = TRUE,   post.collections = FALSE,   post.items = TRUE,   post.token = FALSE,   silent = FALSE,   get.items = FALSE ) #> Searching for collections  #> Found 9 collections  #> The Zotero list contains: 2 collections, 0 items, and 0 attachments  #> Adding 9 items to library using 1 POST request  #> —————————————————Process: 100.00% (1/1). Elapsed time: 00:00:00————————————————— #> $post.status.items #> # A tibble: 9 × 2 #>   status  key      #>   <fct>   <chr>    #> 1 success 2UZHXDE9 #> 2 success 2LJFGM78 #> 3 success B8CERAIB #> 4 success FEB6YC86 #> 5 success 7GU66E2M #> 6 success AS5CYNSX #> 7 success YZYRLKA2 #> 8 success HNB7946R #> 9 success NVSIAN7I #>  #> $post.summary.items #> # A tibble: 1 × 2 #>   status  summary #>   <fct>     <int> #> 1 success       9 #>  #>  #> Creating index for items  # What do we got? # Select only names in index and print index <- cran$index |>    dplyr::select(name) |>   print(width = 80) #> # A tibble: 9 × 1 #>   name                                                                           #>   <chr>                                                                          #> 1 Wickham (2023a) dplyr: A Grammar of Data Manipulation                          #> 2 Wickham (2023b) httr: Tools for Working with URLs and HTTP                     #> 3 Ooms (2025) jsonlite: A Simple and Robust JSON Parser and Generator for R      #> 4 Wickham (2025) purrr: Functional Programming Tools                             #> 5 Henry (2025) rlang: Functions for Base Types and Core R and 'Tidyverse' Featu… #> 6 Wickham (2024a) rvest: Easily Harvest (Scrape) Web Pages                       #> 7 Müller (2023) tibble: Simple Data Frames                                       #> 8 Wickham (2024b) tidyr: Tidy Messy Data                                         #> 9 Henry (2024) tidyselect: Select from a Set of Strings"},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"copying","dir":"Articles","previous_headings":"","what":"Copying","title":"Behold c2z!","text":"many situations want copy collections items (attachments) libraries. may want copy public Zotero library share collections research group. Zotero function contains (somewhat convoluted) method copying collections items group library user library (vice versa). However, example ’re appending group collections long line nested collections, making process somewhat messy. Therefore, split process using ZoteroCopy ZoteroPost functions. change.library argument query Zotero alter location according specified coordinates (default location user library defined .Renviron). Please see tutorial set user/group id API keys.","code":"# Access the group library (defined in .Renviron) group.library <- Zotero(   user = FALSE,   library = TRUE,   silent = FALSE ) #> Searching for collections  #> Found 5 collections  #> The Zotero list contains: 5 collections, 0 items, and 0 attachments  #> Searching for all items in library  #> Found 3 items  #> The Zotero list contains: 5 collections, 3 items, and 0 attachments  # Copy the library creating new keys  copy.library <- ZoteroCopy(   zotero = group.library,   change.library = TRUE,   silent = FALSE ) #> Copying collections  #> Copying items  # Find key for dog dog <- collections$collections |>    dplyr::filter(name == \"dog\") |>    dplyr::pull(\"key\")  # Change parent collection of top-level collection to dog copy.library$collections <- copy.library$collections |>   dplyr::mutate(     parentCollection = dplyr::case_when(       parentCollection == \"FALSE\" ~ dog,       TRUE ~ parentCollection     )   )  # Copy the collection and items to the user library post.copy <- ZoteroPost(   Zotero(     collections = copy.library$collections,     items = copy.library$items   ),   silent = FALSE,   post.token = TRUE ) #> Adding 5 collections to library using 1 POST request  #> —————————————————Process: 100.00% (1/1). Elapsed time: 00:00:00————————————————— #> $post.status.collections #> # A tibble: 5 × 2 #>   status  key      #>   <fct>   <chr>    #> 1 success DQDXE9GT #> 2 success TY24IF6D #> 3 success J56W9VWV #> 4 success C2AWSV9H #> 5 success 8BSSL9UR #>  #> $post.summary.collections #> # A tibble: 1 × 2 #>   status  summary #>   <fct>     <int> #> 1 success       5 #>  #>  #> Adding 3 items to library using 1 POST request  #> —————————————————Process: 100.00% (1/1). Elapsed time: 00:00:00————————————————— #> $post.status.items #> # A tibble: 3 × 2 #>   status  key      #>   <fct>   <chr>    #> 1 success A88L8M8T #> 2 success M3Q65ZPZ #> 3 success NPKPIBVY #>  #> $post.summary.items #> # A tibble: 1 × 2 #>   status  summary #>   <fct>     <int> #> 1 success       3   if (any(nrow(post.copy$items))) {   # Select only names in index and print   ZoteroIndex(post.copy$items) |>     dplyr::select(name) |>     print(width = 80) } #> # A tibble: 3 × 1 #>   name                                                                           #>   <chr>                                                                          #> 1 Mishra et al. (2023) Exploring Active and Critical Engagement in Human-Robot … #> 2 Somby & Stalheim (2023) Vygotsky med VR-briller                                #> 3 Somby & Vik (2023) Vygotskys defektologi - et perspektiv på inkluderende oppl…"},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"bibliography","dir":"Articles","previous_headings":"","what":"Bibliography","title":"Behold c2z!","text":"’s wrap! Now ’s time harvest bounty created steps . create separate bibliographies, sake simplicity mashing together. ’s friendship! arguments used Zotero somewhat self-explanatory, however, also csl.type access style repository order create Citation Style Language (CSL) file according APA7.","code":"# Create references.bib in biblatex format with style.csl according to APA7 bibliography <- Zotero(   collection.names = \"The\",   recursive = TRUE,   library = TRUE,   export = TRUE,   format = \"biblatex\",   save.data = TRUE,   save.path = tempdir(),   bib.name = \"references\",   csl.type = \"apa-single-spaced\",   csl.name = \"style\",   silent = TRUE )  # What do we got? sprintf(   \"We now have %s collections, %s references, and %s attachments\",   bibliography$n.collections,   bibliography$n.items,   bibliography$n.attachments ) #> [1] \"We now have 14 collections, 26 references, and 0 attachments\""},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"deleting","dir":"Articles","previous_headings":"","what":"Deleting","title":"Behold c2z!","text":"Housecleaning! clean mess library. set ragnarok force = TRUE, want delete everything library.","code":"# Delete all collections and items belonging to initial key delete <- ZoteroDelete(   bibliography,    delete.collections = TRUE,   delete.items = TRUE ) #> Deleting 14 collections using 1 DELETE request  #> —————————————————Process: 100.00% (1/1). Elapsed time: 00:00:00————————————————— #> Deleting 26 items using 1 DELETE request  #> —————————————————Process: 100.00% (1/1). Elapsed time: 00:00:00—————————————————"},{"path":"https://oeysan.github.io/c2z/articles/c2z_vignette.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Behold c2z!","text":"can now display references collected created using c2z.","code":""},{"path":"https://oeysan.github.io/c2z/articles/zotero_api.html","id":"step-1-locate-zotero-settings","dir":"Articles","previous_headings":"","what":"Step 1: Locate Zotero settings","title":"Create a Zotero API key","text":"likely purpose using c2z manipulate (personal) Zotero library. Thus, first step acquire access key account, find settings. seen screenshot , also can find userID.","code":""},{"path":"https://oeysan.github.io/c2z/articles/zotero_api.html","id":"step-2-create-a-key","dir":"Articles","previous_headings":"","what":"Step 2: Create a key","title":"Create a Zotero API key","text":"Next, enter key description decide kind access need. bare minimum “allow library access”, however, want create, edit, copy, delete items need “allow write access” well. can also add group permissions. Now created key, seen , need make available c2z.","code":""},{"path":"https://oeysan.github.io/c2z/articles/zotero_api.html","id":"step-3-add-key-to-r","dir":"Articles","previous_headings":"","what":"Step 3: Add key to R","title":"Create a Zotero API key","text":"Though possible directly apply key various functions, recommended add key .Renviron. simplest approach use usethis edit_r_environ() function, open file convenience.","code":"usethis::edit_r_environ()"},{"path":"https://oeysan.github.io/c2z/articles/zotero_api.html","id":"how-it-works","dir":"Articles","previous_headings":"","what":"How it works","title":"Create a Zotero API key","text":"","code":"# Access default zotero library user.library <- Zotero(library = TRUE) #> Searching for collections  #> Found 0 collections  #> Searching for all items in library  #> Found 0 items # Print type of library and id sprintf(\"The library has the prefix: %s\", user.library$prefix) #> [1] \"The library has the prefix: users/9913421\"  # Access the group zotero library group.library <- Zotero(user = FALSE, library = TRUE, silent = TRUE) # Print type of library and id sprintf(\"The library has the prefix: %s\", group.library$prefix) #> [1] \"The library has the prefix: groups/4827927\"  # Print the API sprintf(\"The API key for these libraries is: %s\", Sys.getenv(\"ZOTERO_API\")) #> [1] \"The API key for these libraries is: Io1bwAiOjB1jPgUNegjJhJxF\""},{"path":"https://oeysan.github.io/c2z/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Øystein Olav Skaar. Author, maintainer, copyright holder.","code":""},{"path":"https://oeysan.github.io/c2z/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Skaar ØO (2023). c2z: Reference Manager R. https://oeysan.github.io/c2z/.","code":"@Manual{,   author = {Øystein Olav Skaar},   title = {c2z: a Reference Manager in R},   year = {2023},   url = {https://oeysan.github.io/c2z/}, }"},{"path":[]},{"path":[]},{"path":"https://oeysan.github.io/c2z/index.html","id":"what-is-c2z-cristin-to-zotero","dir":"","previous_headings":"","what":"What is c2z (Cristin to Zotero)?","title":"A Reference Manager","text":"observant reader already identified brilliant word play Psalm 72:8 (King James Version): “shall dominion also sea sea, river unto ends earth”. c2z aims obtaining total dominion Cristin (Current Research Information SysTem Norway) Zotero. package enables manipulating Zotero libraries using R. Import, batch, references Cristin, regjeringen., CRAN, ISBN (currently, Alma Library Congress), DOI (currently, CrossRef DataCite) Zotero library. Add, edit, copy, delete items, including attachments collections, export references BibLaTeX (formats) directly R (see Figure 1).  Figure 1. c2z flowchart.","code":""},{"path":"https://oeysan.github.io/c2z/index.html","id":"who-would-want-to-use-c2z","dir":"","previous_headings":"What is c2z (Cristin to Zotero)?","what":"Who would want to use c2z?","title":"A Reference Manager","text":"Anyone using Zotero, similar reference management software. However, project probably extra interest researchers, students, bibliomaniacs others working library-type services. Though project grounded Norwegian context (apologizes Åse Wetås writing documentation (American) English), international publications easily available DOI ISBN, Zotero functions independent acquiring metadata external services. require specific international/national/regional library database, please make request open pull request. requirement library services open access serve MARC 21 / DOI type metadata (fairly structured XML/JSON). Okay, okay, requirements, ’ll look request try make work.","code":""},{"path":"https://oeysan.github.io/c2z/index.html","id":"what-can-you-use-c2z-for","dir":"","previous_headings":"What is c2z (Cristin to Zotero)?","what":"What can you use c2z for?","title":"A Reference Manager","text":"Hoarding references Zotero, obviously. However, c2z also practical purposes, especially combination packages. probably right kind weirdo (since reading ) use c2z easily handle references writing preparing manuscripts (e.g., papaja), use (personal) webpage (e.g., blogdown bookdown). need work living, just like show , automate publication list résumé (e.g., vitae). Man pays keep track publications, schedule script (e.g., cronR, taskscheduleR Github Actions) keep track new publications institution research group email (Man) recent publications monthly weekly (hourly) basis (e.g., emayili mailR). really feel like use Home Assistant play Tina Turner - Best (Official Music Video) whenever one publications registered Cristin. sky limit!","code":""},{"path":"https://oeysan.github.io/c2z/index.html","id":"list-of-current-features","dir":"","previous_headings":"","what":"List of current features","title":"A Reference Manager","text":"Add, edit, copy, delete (nested) Zotero collections. Add, edit, copy, delete Zotero items, including attachments. Export Zotero items R BibLaTeX (formats). Currently supported formats: books (e.g., anthologies), book chapters, journal articles, presentations (e.g., lectures), opinions pieces. Currently supported formats (CrossRef`): books, book chapters, conference papers, journal articles. DataCite references treated preprints stores reference type (.e.g, dataset) Genre. Batch import Norwegian white papers official Norwegian reports. Batch import R packages CRAN. Search CrossRef, automatically manually, author(s), title, year. Augment Cristin references ISBN, DOI, CrossRef search. Create month--month newsletter registered publications Cristin.","code":""},{"path":"https://oeysan.github.io/c2z/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"A Reference Manager","text":"project strives keeping number dependencies minimum. However, c2z highly dependent dplyr, httr, purrr, rvest, tibble, jsonlite. Dependencies automatically installed CRAN. default, outdated dependencies automatically upgraded.","code":""},{"path":"https://oeysan.github.io/c2z/index.html","id":"installing","dir":"","previous_headings":"","what":"Installing","title":"A Reference Manager","text":"probably want access restricted Zotero library. Please see short tutorial create Zotero API key define .Renviron. can install c2z GitHub. already previous version c2z installed, using command update latest development version.","code":""},{"path":"https://oeysan.github.io/c2z/index.html","id":"development-version-github","dir":"","previous_headings":"Installing","what":"Development version (GitHub)","title":"A Reference Manager","text":"Please note stable versions hosted CRAN, whereas GitHub versions active development.","code":"devtools::install_github(\"oeysan/c2z\")"},{"path":"https://oeysan.github.io/c2z/index.html","id":"stable-version-cran","dir":"","previous_headings":"Installing","what":"Stable version (CRAN)","title":"A Reference Manager","text":"","code":"utils::install.packages(\"c2z\")"},{"path":"https://oeysan.github.io/c2z/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"A Reference Manager","text":"Also, please see magnificent vignette documentation. work associate professor department teacher education Norway. , one responsibilities surprisingly enough teaching. Even surprising, literature Norwegian, form monographs anthologies. Unfortunately, Zotero well-adapted importing Norwegian books ISBN (see Figure 2). example , Imsen (2020) imported using Zotero magic wand (left) c2z (right). Similarly, Zotero unable import Johannessen et al. (2021) using ISBN (cf. lookup failed). Evidently, Alma (47BIBSYS) superior Open WorldCat similar comes identifying () Norwegian books.  Figure 2. Zotero vs. c2z example. following example c2z addresses issue, Zotero function act wrapper 1) connecting Zotero API, 2) creating collection called “c2z-example”, 3) search items using two ISBN identifiers (.e. Imsen, 2020; Johannessen et al., 2021), 4) posting items defined collection, 5) creating bibliography HTML format using APA7 reference style (also exported) supported Zotero export (e.g., BibLaTeX), 6) cleaning example deleting collection two items. R output rather noisy can disabled adding silent = TRUE. example yield following HTML output: Johannessen et al. (2021) interesting (well, perhaps interesting people) example nasty business metadata. Cristin authors listed Christoffersen, Johannessen, Tufte, Alma authors listed Johannessen, Christoffersen, Tufte, whereas book list authors Johannessen, Tufte, Christoffersen (interesting, right?). c2z amends conflicting results provided Cristin Alma parsing statement responsibility field (exists) MARC 21.","code":"library(c2z) example <- Zotero(   collection.names = \"c2z-example\",   library = TRUE,   library.type = \"data,bib\",   create = TRUE,   isbn = c(\"9788215040561\", \"9788279354048\"),   post = TRUE,   post.collections = FALSE,   style = \"apa-single-spaced\",   delete = TRUE,   delete.collections = TRUE,   delete.items = TRUE,   index = TRUE,   post.token = TRUE ) #> Searching for collections  #> Found 0 collections  #> Adding 1 collection to library using 1 POST request  #> —————————————————Process: 100.00% (1/1). Elapsed time: 00:00:00————————————————— #> $post.status.collections #> # A tibble: 1 × 2 #>   status  key      #>   <fct>   <chr>    #> 1 success EA952IJ4 #>  #> $post.summary.collections #> # A tibble: 1 × 2 #>   status  summary #>   <fct>     <int> #> 1 success       1 #>  #>  #> The Zotero list contains: 1 collection, 0 items, and 0 attachments  #> Searching 2 items using ISBN  #> Adding 2 items to library using 1 POST request  #> —————————————————Process: 100.00% (1/1). Elapsed time: 00:00:00————————————————— #> $post.status.items #> # A tibble: 2 × 2 #>   status  key      #>   <fct>   <chr>    #> 1 success HDQQQVFR #> 2 success 7HVP3JGJ #>  #> $post.summary.items #> # A tibble: 1 × 2 #>   status  summary #>   <fct>     <int> #> 1 success       2 #>  #>  #> Searching for items using 1 collection  #> Found 2 items  #> The Zotero list contains: 1 collection, 2 items, and 0 attachments  #> Deleting 1 collection using 1 DELETE request  #> —————————————————Process: 100.00% (1/1). Elapsed time: 00:00:00————————————————— #> Deleting 2 items using 1 DELETE request  #> —————————————————Process: 100.00% (1/1). Elapsed time: 00:00:00————————————————— #> Creating index for items"},{"path":"https://oeysan.github.io/c2z/index.html","id":"limitations","dir":"","previous_headings":"","what":"Limitations","title":"A Reference Manager","text":"Despite several innovative, creative valiant efforts mitigate common weaknesses CrossRef, DataCite, MARC 21, especially Cristin, c2z always create order chaotic metadata world. major limitation reference management software scraping metadata databases poorly registered data. GIGO happen manual inspection required assure references correct. Moreover, project stands falls relationship API’s, meaning c2z likely high maintenance project. instance, Cris/NVA planned replace Cristin 2023, likely cause headache. Finally (really, probably several limitations), c2z built speed. project tries wrangle data strange exotic beasts, simultaneously hoping avoid exploding kittens. Isolated, wrangling data Cristin, ISBN, DOI time-consuming (though downloading entire Cristin database (> 300 MB) importing Zotero take time). One reason Cristin reason keeps separate table containing contributors, meaning reference needs two API calls. Book chapters even time-consuming, Cristin also keeps book metadata another table, totaling four (4) API calls. Enabling data-augmentation DOI ISBN demands even API calls, Crossref search enabled, prior identification DOI ISBN, process can take long, long time. (… totally hammer Crossref API, please don’t !). example, downloading converting 50 random items (n = 1600) , now, supported Cristin categories (k = 32), takes approximately 3.12 minutes without augmentation, 39.02 minutes DOI/ISBN look-, 177.54 minutes Crossref search enabled. Please note run-time dependent bandwidth response-time API’s (Alma especially high latency), c2z uses exponential backoff depending API response. Please report bugs/issues/requests , feel free make pull request.","code":""},{"path":"https://oeysan.github.io/c2z/index.html","id":"coding-conventions","dir":"","previous_headings":"","what":"Coding conventions","title":"A Reference Manager","text":"R code seems mash-different styles, adhering Google’s R style guide Tidyverse’s style guide. addition, combine HTML/CSS/JS Markdown, violating Markdown philosophy. ’s thought breach tradition? – “Thank , prefer way.”","code":""},{"path":"https://oeysan.github.io/c2z/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"A Reference Manager","text":"Don’t evil. Please read Code Conduct","code":""},{"path":"https://oeysan.github.io/c2z/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"A Reference Manager","text":"project licensed MIT License - see LICENSE details","code":""},{"path":"https://oeysan.github.io/c2z/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"A Reference Manager","text":"Henrik Karlstrøm work rcristin","code":""},{"path":"https://oeysan.github.io/c2z/reference/CheckDoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract DOI from a URL or String — CheckDoi","title":"Extract DOI from a URL or String — CheckDoi","text":"function checks input url contains valid Digital Object Identifier (DOI) using regular expression. valid DOI found, extracts DOI optionally returns either DOI string full DOI URL.","code":""},{"path":"https://oeysan.github.io/c2z/reference/CheckDoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract DOI from a URL or String — CheckDoi","text":"","code":"CheckDoi(url, doi.only = FALSE)"},{"path":"https://oeysan.github.io/c2z/reference/CheckDoi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract DOI from a URL or String — CheckDoi","text":"url character string representing URL DOI-containing text. doi.Logical; TRUE, function returns DOI. FALSE (default), function   returns full DOI URL (.e., \"https://doi.org/\" concatenated    DOI).","code":""},{"path":"https://oeysan.github.io/c2z/reference/CheckDoi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract DOI from a URL or String — CheckDoi","text":"Returns character string DOI (full DOI URL) found; otherwise, returns NULL.","code":""},{"path":"https://oeysan.github.io/c2z/reference/CheckDoi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract DOI from a URL or String — CheckDoi","text":"function uses regular expression search DOI  input. leverages external function   GoFish (type = FALSE) perform additional checks.   DOI trimmed using function called   Trim. regular expression pattern designed match   standard DOI format.","code":""},{"path":"https://oeysan.github.io/c2z/reference/CheckDoi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract DOI from a URL or String — CheckDoi","text":"","code":"if (FALSE) { # \\dontrun{   # Example 1: Extract full DOI URL from a string containing a DOI   doi_url <- CheckDoi(\"https://doi.org/10.1000/xyz123\")   # doi_url will be \"https://doi.org/10.1000/xyz123\"    # Example 2: Extract only the DOI without the URL prefix   doi_only <- CheckDoi(\"10.1000/xyz123\", doi.only = TRUE)   # doi_only will be \"10.1000/xyz123\" } # }"},{"path":"https://oeysan.github.io/c2z/reference/CheckIsbn.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and Convert ISBN — CheckIsbn","title":"Check and Convert ISBN — CheckIsbn","text":"function processes input string contains ISBN (compound string first element ISBN). first removes unwanted characters (keeping digits, commas, spaces), uses GoFish function process string. function splits cleaned string spaces commas extract candidate ISBN. candidate ISBN ISBN10 format, converted ISBN13 prepending \"978\", recalculating check digit, concatenating result. Finally, function validates resulting ISBN valid ISBN13, .e., 13 digits long starts either \"978\" \"979\".","code":""},{"path":"https://oeysan.github.io/c2z/reference/CheckIsbn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and Convert ISBN — CheckIsbn","text":"","code":"CheckIsbn(key)"},{"path":"https://oeysan.github.io/c2z/reference/CheckIsbn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check and Convert ISBN — CheckIsbn","text":"key character string contains ISBN compound string first element ISBN.","code":""},{"path":"https://oeysan.github.io/c2z/reference/CheckIsbn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check and Convert ISBN — CheckIsbn","text":"cleaned validated ISBN string. resulting ISBN meet expected criteria,   function returns NULL.","code":""},{"path":"https://oeysan.github.io/c2z/reference/CheckIsbn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check and Convert ISBN — CheckIsbn","text":"function performs following steps: Cleans input key removing characters except digits, commas, spaces. Processes cleaned key using GoFish function (must defined environment). Splits resulting string spaces commas extract first candidate ISBN. candidate ISBN10 format (10 characters), converts ISBN13 : Converting first 9 digits numeric. Prepending ISBN13 prefix \"978\". Calculating ISBN13 check digit using alternating weights 1 3. Concatenating digits form full ISBN13. Validates final key valid ISBN13 (.e., 13 digits long starting \"978\" \"979\").","code":""},{"path":"https://oeysan.github.io/c2z/reference/CheckIsbn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check and Convert ISBN — CheckIsbn","text":"","code":"if (FALSE) { # \\dontrun{ # Example with a compound string where the first part is the ISBN: isbn_input <- \"316148410X, some extra text\" valid_isbn <- CheckIsbn(isbn_input)  # Example converting an ISBN10 to ISBN13: isbn10 <- \"316148410X\" valid_isbn <- CheckIsbn(isbn10) } # }"},{"path":"https://oeysan.github.io/c2z/reference/Cristin.html","id":null,"dir":"Reference","previous_headings":"","what":"Search Cristin API — Cristin","title":"Search Cristin API — Cristin","text":"Use search parameters Cristin API return results   tibble. See CristinWrangler","code":""},{"path":"https://oeysan.github.io/c2z/reference/Cristin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search Cristin API — Cristin","text":"","code":"Cristin(   id = NULL,   doi = NULL,   title = NULL,   contributor = NULL,   issn = NULL,   unit = NULL,   institution = NULL,   user = NULL,   category = NULL,   published_since = NULL,   published_before = NULL,   created_since = NULL,   created_before = NULL,   modified_since = NULL,   modified_before = NULL,   year_reported = NULL,   project_code = NULL,   funding_source = NULL,   funding = NULL,   lang = \"en\",   page = 1,   per_page = 1000,   max.results = NULL,   no.results = FALSE,   sort = NULL,   filter = NULL,   fields = \"all\",   open.query = NULL,   all.results = TRUE,   force = FALSE,   remove.duplicates = TRUE,   base.url = \"https://api.cristin.no/v2/results\",   custom.url = NULL,   use.identifiers = TRUE,   use.multisession = FALSE,   min.multisession = 25,   n.workers = NULL,   handler = NULL,   restore.defaults = TRUE,   zotero = NULL,   zotero.import = TRUE,   zotero.check = TRUE,   nvi = FALSE,   remove.na = TRUE,   replace.na = \"book\",   force.type = NULL,   silent = FALSE,   log = list() )"},{"path":"https://oeysan.github.io/c2z/reference/Cristin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search Cristin API — Cristin","text":"id Cristin id result, Default: NULL doi DOI name (e.g. doi=10.1000/123456), Default: NULL title title result, Default: NULL contributor Author's name Cristin person id, Default: NULL issn issn result, Default: NULL unit Id (e.g. unit=185.53.18.10), Default: NULL institution Id (one number, e.g. institution=185), name acronym institution contributors belong , Default: NULL user person's username Cristin together institution id separated colon (e.g., `askeladd:185`), Default: NULL category Categories. See category codes, Default: NULL published_since Results published since inclusive given year, (yyyy), Default: NULL published_before Results published inclusive given year, (yyyy), Default: NULL created_since Results created since inclusive given date, (yyyy-mm-dd), Default: NULL created_before Results created inclusive given date, (yyyy-mm-dd), Default: NULL modified_since Results modified since inclusive given date, (yyyy-mm-dd), Default: NULL modified_before Results modified inclusive given date, (yyyy-mm-dd), Default: NULL year_reported year result reported, Default: NULL project_code Project code internal reference number used funding source, Default: NULL funding_source Funding source code e.g: NFR, Default: NULL funding Funding source code e.g: NFR, project_code together separated colon (e.g., NFR:1234), Default: NULL lang Two letter language code, Default: en page Page number. See pagination, Default: 1 per_page Number items per page (1000 max). See pagination, Default: 1000 max.results need limit?, Default: NULL .results need number results?, Default: FALSE sort Sorts `category` /`year_published`. See search sort. Default sort order `cristin_result_id` ascending order, Default: NULL filter Vector cateogries include results. See category code, Default: NULL fields `fields = ` gives list result objects available fields. parameter omitted, list result summaries fewer fields returned, Default: open.query Define query terms, Default: NULL .results Find results query, Default: TRUE force Force seldom wise, sometimes..., Default: FALSE remove.duplicates Remove duplicates TRUE, Default: TRUE base.url base url Cristin API, Default: https://api.cristin./v2/results custom.url Define Cristin API url, Default: NULL use.identifiers Use ISBN/DOI identifiers enabled, Default: TRUE use.multisession Logical. TRUE (default), parallel processing using multisession employed; otherwise, processing sequential. min.multisession Minimum number results using multisession. Default: 25 n.workers Optional integer number workers used multisession mode. NULL, defaults number available cores minus one (minimum one). handler progress handler used progressr package. NULL   silent FALSE, defaults \"txtprogressbar\".   silent TRUE,   handler set \"void\". restore.defaults Logical. TRUE (default), current future plan saved restored upon exit. zotero list information specified Zotero library (e.g., id, API key, collections, items), Default: NULL zotero.import Use CristinWrangler wrangle metadata acceptable format Zotero, Default: TRUE zotero.check Check Cristin references already stored Zotero, Default: TRUE nvi Filter non-NVI publications Default: FALSE remove.na Cristin contains many, less, obscure categories, (yet) supported. default removed, however, option set FALSE unsupported categories treated according replace.na, Default: TRUE replace.na May odds favor replace unsupported categories predefined itemType remove.na set false, Default: 'book' force.type Force items predefined itemType, Default: NULL silent c2z noisy, tell quiet, Default: FALSE log list storing log elements, Default: list()","code":""},{"path":"https://oeysan.github.io/c2z/reference/Cristin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search Cristin API — Cristin","text":"list (exported) items Cristin","code":""},{"path":"https://oeysan.github.io/c2z/reference/Cristin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search Cristin API — Cristin","text":"Please see #'   https://oeysan.github.io/c2z/","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/Cristin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search Cristin API — Cristin","text":"","code":"# \\donttest{   # Simple `Cristin` search by id   example <- Cristin(id = \"840998\") #> Found 1 result  #> Checking whether references are supported. See `CristinSupported()`  #> Looking for missing data  #> Sequential processing. Converting 1 item to Zotero format (began 10.04.2025 - 18:51:34)  #> Duration: 00:00:05.269 (ended 10.04.2025 - 18:51:39)     # Print index using `ZoteroIndex`   if (any(nrow(example$results))) {     ZoteroIndex(example$results) |>       dplyr::select(name) |>       print(width = 80)   } #> # A tibble: 1 × 1 #>   name                                                                           #>   <chr>                                                                          #> 1 Petersen (2012) Seeds of Satan: Conceptions of Magic in Contemporary Satanism… # }"},{"path":"https://oeysan.github.io/c2z/reference/CristinSupported.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for supported export formats from Cristin to Zotero — CristinSupported","title":"Check for supported export formats from Cristin to Zotero — CristinSupported","text":"Used filter Cristin categories supported","code":""},{"path":"https://oeysan.github.io/c2z/reference/CristinSupported.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for supported export formats from Cristin to Zotero — CristinSupported","text":"","code":"CristinSupported(   data = NULL,   zotero.check = TRUE,   items = NULL,   remove.na = TRUE,   replace.na = \"book\",   force.type = NULL,   remove.duplicates = TRUE,   lang = \"en\",   silent = FALSE,   log = list() )"},{"path":"https://oeysan.github.io/c2z/reference/CristinSupported.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for supported export formats from Cristin to Zotero — CristinSupported","text":"data Zotero-type matrix, Default: NULL zotero.check function look duplicates?, Default: TRUE items Items library check remove.na Cristin contains many, less, obscure categories, (yet) supported. default removed, however, option set FALSE unsupported categories treated according replace.na, Default: TRUE replace.na May odds favor replace unsupported categories predefined itemType remove.na set false, Default: 'book' force.type Force items predefined itemType, Default: NULL remove.duplicates Remove duplicates TRUE, Default: TRUE lang Two letter language code, Default: en silent c2z noisy, tell quiet, Default: FALSE log list storing log elements, Default: list()","code":""},{"path":"https://oeysan.github.io/c2z/reference/CristinSupported.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for supported export formats from Cristin to Zotero — CristinSupported","text":"Zotero supported items unsupported categories NA","code":""},{"path":"https://oeysan.github.io/c2z/reference/CristinSupported.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check for supported export formats from Cristin to Zotero — CristinSupported","text":"Please see   https://oeysan.github.io/c2z/","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/CristinSupported.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for supported export formats from Cristin to Zotero — CristinSupported","text":"","code":"# Supported Cristin items print(CristinSupported(), n = 5) #> # A tibble: 33 × 2 #>   cristin.category zotero.types #>   <chr>            <chr>        #> 1 ANTHOLOGYACA     book         #> 2 BOOKTRANSL       book         #> 3 MONOGRAPHACA     book         #> 4 COMMENTARYACA    book         #> 5 TEXTBOOK         book         #> # ℹ 28 more rows"},{"path":"https://oeysan.github.io/c2z/reference/CristinWrangler.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrangle Cristin metadata into Zotero-type format — CristinWrangler","title":"Wrangle Cristin metadata into Zotero-type format — CristinWrangler","text":"Converts Cristin metadata Zotero-style tibble.","code":""},{"path":"https://oeysan.github.io/c2z/reference/CristinWrangler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrangle Cristin metadata into Zotero-type format — CristinWrangler","text":"","code":"CristinWrangler(data, meta = list(), use.identifiers = TRUE)"},{"path":"https://oeysan.github.io/c2z/reference/CristinWrangler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrangle Cristin metadata into Zotero-type format — CristinWrangler","text":"data Tibble containing metadata Cristin meta list storing data elements, Default: list() use.identifiers Use ISBN/DOI identifiers enabled, Default: TRUE","code":""},{"path":"https://oeysan.github.io/c2z/reference/CristinWrangler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrangle Cristin metadata into Zotero-type format — CristinWrangler","text":"Zotero-type tibble.","code":""},{"path":"https://oeysan.github.io/c2z/reference/CristinWrangler.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrangle Cristin metadata into Zotero-type format — CristinWrangler","text":"Please see https://oeysan.github.io/c2z/","code":""},{"path":"https://oeysan.github.io/c2z/reference/DoiCrossref.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrangle CrossRef metadata into Zotero-type format — DoiCrossref","title":"Wrangle CrossRef metadata into Zotero-type format — DoiCrossref","text":"Query CrossRef DOI fetch metadata","code":""},{"path":"https://oeysan.github.io/c2z/reference/DoiCrossref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrangle CrossRef metadata into Zotero-type format — DoiCrossref","text":"","code":"DoiCrossref(data, meta = list(), use.json = TRUE, silent = TRUE, log = list())"},{"path":"https://oeysan.github.io/c2z/reference/DoiCrossref.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrangle CrossRef metadata into Zotero-type format — DoiCrossref","text":"data XML data CrossRef containing metadata meta list collecting metadata used create , Default: list() use.json Use either json (TRUE) XML (FALSE), Default: TRUE silent c2z noisy, tell quiet, Default: TRUE log list storing log elements, Default: list()","code":""},{"path":"https://oeysan.github.io/c2z/reference/DoiCrossref.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrangle CrossRef metadata into Zotero-type format — DoiCrossref","text":"Zotero-type matrix (tibble)","code":""},{"path":"https://oeysan.github.io/c2z/reference/DoiCrossref.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrangle CrossRef metadata into Zotero-type format — DoiCrossref","text":"Please see   https://oeysan.github.io/c2z/","code":""},{"path":"https://oeysan.github.io/c2z/reference/DoiCrossref.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrangle CrossRef metadata into Zotero-type format — DoiCrossref","text":"","code":"# \\donttest{   # `DoiCrossref` is called from `ZoteroDoi` (if item found)   example <- ZoteroDoi(\"10.1126/sciadv.abd1705\")    # Print index using `ZoteroIndex`   if (!is.null(example$data)) {     ZoteroIndex(example$data) |>       dplyr::select(name) |>       print(width = 80)      # Display catalog     example$data$libraryCatalog   } #> # A tibble: 1 × 1 #>   name                                                                           #>   <chr>                                                                          #> 1 Serra-Garcia & Gneezy (2021) Nonreplicable publications are cited more than r… #> [1] \"DOI.org (Crossref)\" # }"},{"path":"https://oeysan.github.io/c2z/reference/DoiDatacite.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrangle DataCite metadata into Zotero-type format — DoiDatacite","title":"Wrangle DataCite metadata into Zotero-type format — DoiDatacite","text":"Query DataCite DOI fetch metadata","code":""},{"path":"https://oeysan.github.io/c2z/reference/DoiDatacite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrangle DataCite metadata into Zotero-type format — DoiDatacite","text":"","code":"DoiDatacite(data, meta = list(), silent = TRUE, log = list())"},{"path":"https://oeysan.github.io/c2z/reference/DoiDatacite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrangle DataCite metadata into Zotero-type format — DoiDatacite","text":"data XML data DataCite containing metadata meta list collecting metadata used create , Default: list() silent c2z noisy, tell quiet, Default: TRUE log list storing log elements, Default: list()","code":""},{"path":"https://oeysan.github.io/c2z/reference/DoiDatacite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrangle DataCite metadata into Zotero-type format — DoiDatacite","text":"Zotero-type matrix (tibble)","code":""},{"path":"https://oeysan.github.io/c2z/reference/DoiDatacite.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrangle DataCite metadata into Zotero-type format — DoiDatacite","text":"Please see   https://oeysan.github.io/c2z/","code":""},{"path":"https://oeysan.github.io/c2z/reference/DoiDatacite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrangle DataCite metadata into Zotero-type format — DoiDatacite","text":"","code":"# \\donttest{   # `DoiDatacite` is called from `ZoteroDoi` (if item found)   example <- ZoteroDoi(\"10.17605/OSF.IO/7HZ4P\")    # Use `ZoteroIndex` to print   # Print index using `ZoteroIndex`   if (any(nrow(example$data))) {     ZoteroIndex(example$data) |>       dplyr::select(name) |>       print(width = 80)      # Display catalog     example$data$libraryCatalog   } #> # A tibble: 1 × 1 #>   name                                                           #>   <chr>                                                          #> 1 Skaar & Reber (2022) Alone or Together: Supplemental materials #> [1] \"DOI.org (Datacite)\" # }"},{"path":"https://oeysan.github.io/c2z/reference/ProcessData.html","id":null,"dir":"Reference","previous_headings":"","what":"Process data with Parallel Execution and Row/Chunk Processing — ProcessData","title":"Process data with Parallel Execution and Row/Chunk Processing — ProcessData","text":"function processes tibble (data frame) parallel using future package along progressr progress reporting. data split chunks via helper function SplitData. Depending .rows flag, chunk processed either row--row (using lapply) entire chunk. either case, processed results bound single tibble.","code":""},{"path":"https://oeysan.github.io/c2z/reference/ProcessData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process data with Parallel Execution and Row/Chunk Processing — ProcessData","text":"","code":"ProcessData(   data,   func,   by.rows = TRUE,   min.multisession = 1,   n.workers = NULL,   limit = 100,   use.multisession = TRUE,   n.message = 1,   start.message = NULL,   process.message = NULL,   end.message = NULL,   restore.defaults = TRUE,   handler = NULL,   silent = FALSE,   log = list(),   ... )"},{"path":"https://oeysan.github.io/c2z/reference/ProcessData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process data with Parallel Execution and Row/Chunk Processing — ProcessData","text":"data Data processed. func function processes either single row (.rows = TRUE) entire chunk (.rows = FALSE). Additional arguments passed func via .... .rows Logical. TRUE, func applied row individually within chunk; FALSE, func applied entire chunk. Default TRUE. min.multisession Integer. minimum number rows data required use multisession (parallel execution). nrow(data) less value, parallel processing disabled. Default 1. n.workers Integer. number workers use parallel processing. Defaults max(1, future::availableCores() - 1). limit Integer. (nrow(data) / limit) less equal n.workers, data split n.workers; otherwise, split using limit. Default 100. use.multisession Logical. TRUE (default) parallel processing used; otherwise, sequential processing employed. n.message Integer. Display process message every nth iteration. Defaults 1. Turn messages 0. start.message Optional character string. custom message log start processing. process.message Optional column name. custom message log processing. end.message Optional character string. custom message log end processing. restore.defaults Logical. TRUE (default), original future plan progress handlers restored processing. handler Character string. progress handler used progressr package. Defaults \"txtprogressbar\" unless silent TRUE. silent Logical. TRUE, progress messages logging suppressed. Default FALSE. log List. initial log (default empty list) log messages appended. ... Additional arguments passed processing function func.","code":""},{"path":"https://oeysan.github.io/c2z/reference/ProcessData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process data with Parallel Execution and Row/Chunk Processing — ProcessData","text":"list two components: results tibble resulting binding processed rows chunk. log list log messages generated processing.","code":""},{"path":"https://oeysan.github.io/c2z/reference/ProcessData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process data with Parallel Execution and Row/Chunk Processing — ProcessData","text":"function first checks data enough rows warrant parallel processing. determines number workers chunks splits data using helper function SplitData. processing executed future.apply::future_lapply parallel. .rows TRUE, row within chunk processed individually bound together using dplyr::bind_rows; .rows FALSE, entire chunk processed . Finally, chunk results combined single tibble.","code":""},{"path":"https://oeysan.github.io/c2z/reference/ProcessData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process data with Parallel Execution and Row/Chunk Processing — ProcessData","text":"","code":"if (FALSE) { # \\dontrun{ example.result <- ProcessData(   data =  tibble::tibble(     key = LETTERS[1:3],     value = seq(3)   ),   func = \\(data) {     data$value <- data$value * 10     data   },   by.rows = FALSE,   min.multisession = 10,   n.workers = 4,   limit = 100,   use.multisession = TRUE,   start.message = \"Starting example data processing\",   end.message   = \"Finished example data processing\",   handler = \"txtprogressbar\",   silent = FALSE ) # The result is a single tibble. processed.tibble <- example.result$results process.log <- example.result$log if (any(nrow(processed.tibble))) print(processed.tibble) } # }"},{"path":"https://oeysan.github.io/c2z/reference/Processing.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Data with Optional Parallel Execution and Progress Reporting — Processing","title":"Process Data with Optional Parallel Execution and Progress Reporting — Processing","text":"function executes provided expression progress reporting optional parallel processing using future progressr packages. logs start end times process along runtime message supports custom logging, progress handlers, execution plans.","code":""},{"path":"https://oeysan.github.io/c2z/reference/Processing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Data with Optional Parallel Execution and Progress Reporting — Processing","text":"","code":"Processing(   func = substitute(NULL),   n = NULL,   start.message = NULL,   end.message = NULL,   use.multisession = TRUE,   n.workers = NULL,   handler = NULL,   restore.defaults = TRUE,   silent = FALSE,   log = list() )"},{"path":"https://oeysan.github.io/c2z/reference/Processing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Data with Optional Parallel Execution and Progress Reporting — Processing","text":"func expression (quoted function call) evaluated. default substitute(NULL). evaluated parent frame. n Optional integer indicating number items processed, used solely logging purposes. start.message Optional character string specifying custom start message. NULL, default message generated based processing type , provided, number items. end.message Optional character string specifying custom end message. NULL, runtime message generated showing elapsed time. use.multisession Logical. TRUE (default), parallel processing using multisession employed; otherwise, processing sequential. n.workers Optional integer number workers used multisession mode. NULL, defaults number available cores minus one (minimum one). handler progress handler used progressr package. NULL silent FALSE, defaults \"txtprogressbar\". silent TRUE, handler set \"void\". restore.defaults Logical. TRUE (default), current future plan saved restored upon exit. silent Logical. TRUE, progress output suppressed. Default FALSE. log list collect log messages. Default empty list.","code":""},{"path":"https://oeysan.github.io/c2z/reference/Processing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Data with Optional Parallel Execution and Progress Reporting — Processing","text":"list following components: result output resulting evaluation func. log list log messages including start end timestamps along associated messages.","code":""},{"path":"https://oeysan.github.io/c2z/reference/Processing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process Data with Optional Parallel Execution and Progress Reporting — Processing","text":"function begins determining whether use multisession (parallel) sequential processing. logs start time using helper function, LogCat, sets future plan accordingly. restore.defaults TRUE, original plan restored execution. progress handler configured via progressr package. provided expression evaluated progress reporting enabled. Upon completion, function computes elapsed time (millisecond precision) logs end message. Finally, returns list containing result evaluated expression log messages.","code":""},{"path":"https://oeysan.github.io/c2z/reference/Processing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Data with Optional Parallel Execution and Progress Reporting — Processing","text":"","code":"if (FALSE) { # \\dontrun{   # Example: Process data with a simple sleep expression using multisession processing   result <- Processing(     func = quote({       Sys.sleep(2)  # simulate a time-consuming task       \"Task Completed\"     }),     n = 100,     use.multisession = TRUE   )   print(result$result)   print(result$log) } # }"},{"path":"https://oeysan.github.io/c2z/reference/Trim.html","id":null,"dir":"Reference","previous_headings":"","what":"Trim — Trim","title":"Trim — Trim","text":"Trim","code":""},{"path":"https://oeysan.github.io/c2z/reference/Trim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trim — Trim","text":"","code":"Trim(x, multi = TRUE)"},{"path":"https://oeysan.github.io/c2z/reference/UpdateInsert.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsert and Update Data Frames — UpdateInsert","title":"Upsert and Update Data Frames — UpdateInsert","text":"Combines two data frames updating rows x values y based common key, inserting new rows y present x. function first harmonizes column structures data frames adding missing columns coercing types necessary.","code":""},{"path":"https://oeysan.github.io/c2z/reference/UpdateInsert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsert and Update Data Frames — UpdateInsert","text":"","code":"UpdateInsert(x, y, key = \"key\", check.missing = FALSE)"},{"path":"https://oeysan.github.io/c2z/reference/UpdateInsert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsert and Update Data Frames — UpdateInsert","text":"x data frame updated. y data frame containing new values update x. Must include column specified key. key character string specifying unique key column used matching rows. Defaults \"key\". check.missing Logical; TRUE, performs cell--cell update new value missing. Missing values defined NA atomic types empty list list columns. FALSE, standard upsert performed using dplyr::rows_upsert. Defaults FALSE.","code":""},{"path":"https://oeysan.github.io/c2z/reference/UpdateInsert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsert and Update Data Frames — UpdateInsert","text":"data frame resulting updating x values y.","code":""},{"path":"https://oeysan.github.io/c2z/reference/UpdateInsert.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Upsert and Update Data Frames — UpdateInsert","text":"function works several steps: computes union column names x y adds missing columns         data frames using internal helper function AddColumns. Missing columns filled         appropriate NA value based type. x y reordered column order. common column (excluding key), x's column entirely NA         data types differ, coercion performed ensure compatibility x y. check.missing TRUE, function iterates common key updates         cell x corresponding cell y missing. Otherwise, uses         dplyr::rows_upsert perform standard upsert. New rows present y x appended.","code":""},{"path":"https://oeysan.github.io/c2z/reference/UpdateInsert.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsert and Update Data Frames — UpdateInsert","text":"","code":"if (FALSE) { # \\dontrun{   # Example data frames:   df1 <- data.frame(     key = 1:3,     a = c(NA, 2, NA),     b = c(\"x\", NA, \"z\"),     stringsAsFactors = FALSE   )    df2 <- data.frame(     key = c(2, 3, 4),     a = c(5, 6, 7),     b = c(\"y\", \"w\", \"v\"),     stringsAsFactors = FALSE   )    # Standard upsert (check.missing = FALSE):   result <- UpdateInsert(df1, df2, key = \"key\", check.missing = FALSE)    # Cell-by-cell update (check.missing = TRUE):   result <- UpdateInsert(df1, df2, key = \"key\", check.missing = TRUE) } # }"},{"path":"https://oeysan.github.io/c2z/reference/Zotero.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to Zotero API — Zotero","title":"Connect to Zotero API — Zotero","text":"Wrapper connect Zotero API main functions   *c2z*","code":""},{"path":"https://oeysan.github.io/c2z/reference/Zotero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to Zotero API — Zotero","text":"","code":"Zotero(   collection.names = NULL,   collection.key = NULL,   collection.path = NULL,   item.key = NULL,   library = FALSE,   case.insensitive = TRUE,   ancestor = FALSE,   recursive = FALSE,   create = FALSE,   limit = 100,   start = 0,   search.collections = TRUE,   get.collections = TRUE,   get.items = TRUE,   item.type = NULL,   all.results = TRUE,   max.results = NULL,   collections = NULL,   items = NULL,   attachments = NULL,   metadata = NULL,   doi = NULL,   isbn = NULL,   export = FALSE,   csl.type = NULL,   csl.name = \"style\",   format = \"biblatex\",   save.data = FALSE,   save.path = NULL,   bib.name = \"references\",   library.type = NULL,   linkwrap = 1,   style = \"apa\",   locale = \"en-US\",   copy = FALSE,   copy.collections = TRUE,   copy.items = TRUE,   copy.extras = TRUE,   remove.missing = TRUE,   change.library = FALSE,   copy.user = TRUE,   copy.id = NULL,   copy.api = NULL,   post = FALSE,   post.collections = TRUE,   post.items = TRUE,   post.attachments = TRUE,   post.limit = 50,   post.token = FALSE,   delete = FALSE,   delete.collections = FALSE,   delete.items = FALSE,   delete.limit = 50,   ragnarok = FALSE,   user = TRUE,   index = FALSE,   id = NULL,   token = NULL,   token.api = NULL,   api = NULL,   force = FALSE,   base.url = \"https://api.zotero.org\",   silent = FALSE,   zotero = NULL,   log = list() )"},{"path":"https://oeysan.github.io/c2z/reference/Zotero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to Zotero API — Zotero","text":"collection.names Vector collection names create search , Default: NULL collection.key specified collection key, Default: NULL collection.path Vector nested collection keys, Default: NULL item.key specified item key, Default: NULL library Use `ZoteroLibrary` fetch collections items, Default: FALSE case.insensitive Disregard letter casing searching collections, Default: TRUE ancestor Trace lineage collection (.e., find top-level collection), Default: FALSE recursive Find nested collections, Default: FALSE create Create missing collections, Default: FALSE limit Number results per query (max 100), Default: 100 start Starting position query (0 = first result), Default: 0 search.collections Search collections collection.key fails, Default: TRUE get.collections Fetch collections, Default: TRUE get.items Fetch items, Default: TRUE item.type Items search (NULL = everything), Default: NULL .results Find results query, Default: TRUE max.results need limit?, Default: NULL collections Predefined collections (tibble), Default: NULL items Predefined metadata (tibble), Default: NULL attachments Predefined attachments (tibble), Default: NULL metadata Predefined metadata Zotero-format, Default: NULL doi Use ZoteroDoi fetch DOI metadata, Default: NULL isbn Use ZoteroIsbn fetch ISBN metadata, Default: NULL export Use `ZoteroExport` export items, Default: FALSE csl.type Specify CSL type Official repository Citation Style Language (CSL), Default: NULL csl.name Name saved CSL file, Default: 'style' format Export format Zotero items, Default: 'biblatex' save.data Save data (e.g., bibliography) disk, Default: FALSE save.path Location store data disk, Default: NULL bib.name Name exported bibliography, Default: 'references' library.type Commma-separated data Zotero (.e., data, bib, citation), Default: NULL linkwrap Set URL (e.g., DOI) HTML link (1 = yes), Default: 1 style Citation style use appended bibliography /citations, Default: apa locale Desired language format bibliography, Default: 'en-US' copy Use `ZoteroCopy` delete collections /items, Default: FALSE copy.collections Try copy specified collections, Default: TRUE copy.items Try copy specified items?, Default: TRUE copy.extras Try copy specified extras (.e., attachments notes)?, Default: TRUE remove.missing Deleted missing extras, Default: TRUE change.library Stage changing library (e.g., group personal library), Default: FALSE copy.user New user type (functions use `group` prefix FALSE), Default: TRUE copy.id New id, Default: NULL copy.api New API key. Set API `NA` key needed, Default: NULL post Use `ZoteroPost` post collections /items, Default: FALSE post.collections Try copy specified collections, Default: TRUE post.items Try copy specified items?, Default: TRUE post.attachments Try copy specified extras (.e., attachments notes)?, Default: TRUE post.limit Number collections/items post per request (max 50), Default: 50 post.token Use Zotero-Write-Token (TRUE) -Unmodified-Since-Version (FALSE), Default: FALSE delete Use `ZoteroDelete` delete collections /items, Default: FALSE delete.collections Try delete specified collections, Default: TRUE delete.items Try delete specified items?, Default: TRUE delete.limit Number collections/items delete per request (max 50), Default: 50 ragnarok Delete EVERYTHING specified library, Default: FALSE user User type (functions use `group` prefix FALSE), Default: TRUE index Create index items, Default: FALSE id User group ID, Default: NULL token Name user group token defined `.Renviron`, Default: NULL token.api Name API token defined `.Renviron`, Default: NULL api API key connect Zotero library. Set API `NA` key needed. See Zotero API, Default: NULL force Force seldom wise, sometimes..., Default: FALSE base.url Base url Zotero API, Default: 'https://api.zotero.org' silent c2z noisy, tell quiet, Default: FALSE zotero list information specified Zotero library (e.g., id, API key, collections, items), Default: NULL log list storing log elements, Default: list()","code":""},{"path":"https://oeysan.github.io/c2z/reference/Zotero.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to Zotero API — Zotero","text":"list information specified Zotero library (e.g., id,   API key, collections, items)","code":""},{"path":"https://oeysan.github.io/c2z/reference/Zotero.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to Zotero API — Zotero","text":"Please see https://oeysan.github.io/c2z/","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/Zotero.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to Zotero API — Zotero","text":"","code":"# Create the default Zotero list example <- Zotero(id = \"9913421\", api = \"Io1bwAiOjB1jPgUNegjJhJxF\") # Print the interesting pars of an otherwise empty list print(tail(example,5)) #> $user #> [1] TRUE #>  #> $id #> [1] \"9913421\" #>  #> $api #> [1] \"Io1bwAiOjB1jPgUNegjJhJxF\" #>  #> $prefix #> [1] \"users/9913421\" #>  #> $url #> [1] \"https://api.zotero.org/users/9913421/\" #>"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroAdd.html","id":null,"dir":"Reference","previous_headings":"","what":"Add items to Zotero list — ZoteroAdd","title":"Add items to Zotero list — ZoteroAdd","text":"Use identifiers predefined data add Zotero list","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroAdd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add items to Zotero list — ZoteroAdd","text":"","code":"ZoteroAdd(zotero, metadata = NULL, doi = NULL, isbn = NULL, silent = FALSE)"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroAdd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add items to Zotero list — ZoteroAdd","text":"zotero list information specified Zotero library (e.g., id, API key, collections, items) metadata Predefined metadata Zoter-format, Default: NULL doi Use ZoteroDoi fetch DOI metadata, Default: NULL isbn Use ZoteroIsbn fetch ISBN metadata, Default: NULL silent c2z noisy, tell quiet, Default: FALSE","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroAdd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add items to Zotero list — ZoteroAdd","text":"add data Zotero list","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroAdd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add items to Zotero list — ZoteroAdd","text":"Please see   https://oeysan.github.io/c2z/","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroAdd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add items to Zotero list — ZoteroAdd","text":"","code":"# \\donttest{   # Add items from `ZoteroIsbn` to the default Zotero list   example <- ZoteroAdd(     Zotero(       id = \"9913421\",       api = \"Io1bwAiOjB1jPgUNegjJhJxF\"     ),     isbn = \"978-1529797138\"   ) #> Searching 1 item using ISBN    # Print index using `ZoteroIndex`   if (any(nrow(example$items))) {     ZoteroIndex(example$items) |>       dplyr::select(name) |>       print(width = 80)   } #> # A tibble: 1 × 1 #>   name                                                         #>   <chr>                                                        #> 1 Field (2022) Adventure in statistics: the reality enigma, An # }"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCheck.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Zotero Library for Duplicates — ZoteroCheck","title":"Check Zotero Library for Duplicates — ZoteroCheck","text":"Removes references input dataset duplicates already added Zotero, preserving references modified since addition.","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCheck.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Zotero Library for Duplicates — ZoteroCheck","text":"","code":"ZoteroCheck(   data,   id,   id.type,   created,   last.modified,   items,   remove.duplicates = TRUE,   silent = FALSE,   log = list() )"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCheck.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Zotero Library for Duplicates — ZoteroCheck","text":"data tibble containing metadata (e.g., Cristin) id string specifying column name data contains unique identifier (e.g., \"cristin_result_id\") id.type string specifying type metadata stored Zotero extra field (e.g., \"Cristin\") created string specifying column name data containing creation date UNIX timestamp format (e.g., \"created\") last.modified string specifying column name data containing last modification date UNIX timestamp format (e.g., \"last_modified\") items data frame tibble representing items Zotero library check remove.duplicates Logical. TRUE, duplicates modified removed. Default TRUE. silent Logical. TRUE, suppresses verbose output. Default FALSE. log list storing log messages. Default empty list.","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCheck.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Zotero Library for Duplicates — ZoteroCheck","text":"list two elements: data, tibble containing non-duplicated items, log, updated log list.","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCheck.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check Zotero Library for Duplicates — ZoteroCheck","text":"details, see c2z documentation.","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCheck.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Zotero Library for Duplicates — ZoteroCheck","text":"","code":"if (FALSE) { # \\dontrun{   # Simple Cristin search by id   cristin.data <- Cristin(     id = \"840998\",     zotero.import = FALSE   )    # Checking Zotero library for duplicates   result <- ZoteroCheck(     data = cristin.data$result,     id = \"cristin_result_id\",     id.type = \"Cristin\",     created = \"created\",     last.modified = \"last_modified\",     items = Zotero(       user = FALSE,       id = \"4827927\",       api = \"Io1bwAiOjB1jPgUNegjJhJxF\",       library = TRUE,       silent = TRUE     )$items   ) } # }"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCopy.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy collections and items from a Zotero library — ZoteroCopy","title":"Copy collections and items from a Zotero library — ZoteroCopy","text":"Replace key identifiers new ones keeping existing   structure relationship collections items","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCopy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy collections and items from a Zotero library — ZoteroCopy","text":"","code":"ZoteroCopy(   zotero,   copy.collections = TRUE,   copy.items = TRUE,   copy.extras = TRUE,   remove.missing = TRUE,   change.library = FALSE,   copy.user = TRUE,   copy.id = NULL,   copy.api = NULL,   silent = FALSE )"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCopy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy collections and items from a Zotero library — ZoteroCopy","text":"zotero list information specified Zotero library (e.g., id, API key, collections, items) copy.collections Try copy specified collections, Default: TRUE copy.items Try copy specified items?, Default: TRUE copy.extras Try copy specified extras (.e., attachments notes)?, Default: TRUE remove.missing Deleted missing extras, Default: TRUE change.library Stage changing library (e.g., group personal library), Default: FALSE copy.user New user type (functions use `group` prefix FALSE), Default: TRUE copy.id New id, Default: NULL copy.api New API key, Default: NULL silent c2z noisy, tell quiet, Default: FALSE","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCopy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy collections and items from a Zotero library — ZoteroCopy","text":"list information specified Zotero library (e.g., copied   collections items)","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCopy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Copy collections and items from a Zotero library — ZoteroCopy","text":"Please see   https://oeysan.github.io/c2z/","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCopy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Copy collections and items from a Zotero library — ZoteroCopy","text":"","code":"# \\donttest{   # Fetching collections and items from default group   zotero = Zotero(     user = FALSE,     id = \"4827927\",     api = \"Io1bwAiOjB1jPgUNegjJhJxF\",     library = TRUE   ) #> Searching for collections  #> Found 5 collections  #> The Zotero list contains: 5 collections, 0 items, and 0 attachments  #> Searching for all items in library  #> Found 3 items  #> The Zotero list contains: 5 collections, 3 items, and 0 attachments     # Display collections   if (any(nrow(zotero$collections))) {     zotero$collections |>       dplyr::select(key, version, parentCollection) |>       print(width = 80)   } #> # A tibble: 5 × 3 #>   key      version parentCollection #>   <chr>      <int> <chr>            #> 1 Z7UY2AMH     173 5CYJY58A         #> 2 4U4Q3ING     173 F5TXCJZX         #> 3 MUFMB89Y     173 Z7UY2AMH         #> 4 5CYJY58A     173 4U4Q3ING         #> 5 F5TXCJZX     173 FALSE               # Display items   if (any(nrow(zotero$items))) {     zotero$items |>       dplyr::select(key, version) |>       print(width = 80)   } #> # A tibble: 3 × 2 #>   key      version #>   <chr>      <int> #> 1 E4V6GUCV     176 #> 2 EFYP9975     176 #> 3 5CXYJP68     174    # Copy items   example <- ZoteroCopy(     zotero,   ) #> Copying collections  #> Copying items     # Display collections   if (any(nrow(example$collections))) {     example$collections |>       dplyr::select(key, version, parentCollection) |>       print(width = 80)   } #> # A tibble: 5 × 3 #>   key      version parentCollection #>   <chr>      <dbl> <chr>            #> 1 JP5JWKDI       0 FALSE            #> 2 Z8D3SF6D       0 JP5JWKDI         #> 3 CZ8PQ9AR       0 Z8D3SF6D         #> 4 527NK32U       0 CZ8PQ9AR         #> 5 IEZZEJY6       0 527NK32U            # Display items   if (any(nrow(example$items))) {     example$items |>       dplyr::select(key, version) |>       print(width = 80)   } #> # A tibble: 3 × 2 #>   key      version #>   <chr>      <dbl> #> 1 BEM2487T       0 #> 2 DCGJMVB4       0 #> 3 F36J5KIP       0 # }"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCran.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrangle CRAN metadata into Zotero-type format — ZoteroCran","title":"Wrangle CRAN metadata into Zotero-type format — ZoteroCran","text":"Query CRAN name fetch metadata","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCran.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrangle CRAN metadata into Zotero-type format — ZoteroCran","text":"","code":"ZoteroCran(id, meta = list(), silent = TRUE, log = list())"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCran.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrangle CRAN metadata into Zotero-type format — ZoteroCran","text":"id name R package meta list collecting metadata used create , Default: list() silent c2z noisy, tell quiet, Default: TRUE log list storing log elements, Default: list()","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCran.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrangle CRAN metadata into Zotero-type format — ZoteroCran","text":"Zotero-type matrix (tibble)","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCran.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrangle CRAN metadata into Zotero-type format — ZoteroCran","text":"Please see https://oeysan.github.io/c2z/","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/ZoteroCran.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrangle CRAN metadata into Zotero-type format — ZoteroCran","text":"","code":"# \\donttest{   # Search cran for package `dplyr`   example <- ZoteroCran(c(\"dplyr\", \"jsonlite\", \"httr\"))    # Print index using `ZoteroIndex`   if (any(nrow(example$data))) {   ZoteroIndex(example$data) |>     dplyr::select(name) |>     print(width = 80)   } #> # A tibble: 3 × 1 #>   name                                                                      #>   <chr>                                                                     #> 1 Wickham (2023a) dplyr: A Grammar of Data Manipulation                     #> 2 Wickham (2023b) httr: Tools for Working with URLs and HTTP                #> 3 Ooms (2025) jsonlite: A Simple and Robust JSON Parser and Generator for R # }"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroDelete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete collections and items from a Zotero library — ZoteroDelete","title":"Delete collections and items from a Zotero library — ZoteroDelete","text":"Cleaning Zotero library","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroDelete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete collections and items from a Zotero library — ZoteroDelete","text":"","code":"ZoteroDelete(   zotero,   delete.collections = FALSE,   delete.items = FALSE,   delete.limit = 50,   force = FALSE,   ragnarok = FALSE,   silent = FALSE )"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroDelete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete collections and items from a Zotero library — ZoteroDelete","text":"zotero list information specified Zotero library (e.g., id, API key, collections, items) delete.collections Try delete specified collections, Default: TRUE delete.items Try delete specified items?, Default: TRUE delete.limit Number collections/items delete per request (max 50), Default: 50 force Force seldom wise, sometimes..., Default: FALSE ragnarok Delete EVERYTHING specified library, Default: FALSE silent c2z noisy, tell quiet, Default: FALSE","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroDelete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete collections and items from a Zotero library — ZoteroDelete","text":"list information specified Zotero library (e.g.,   deleted collections items)","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroDelete.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delete collections and items from a Zotero library — ZoteroDelete","text":"Please see   https://oeysan.github.io/c2z/","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/ZoteroDelete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete collections and items from a Zotero library — ZoteroDelete","text":"","code":"# \\donttest{   # Delete everything in a group   example <- ZoteroDelete(     Zotero(       user = FALSE,       id = \"4988497\",       api = \"Io1bwAiOjB1jPgUNegjJhJxF\"     ),     ragnarok = TRUE,     force = TRUE   ) #> There are no collections to DELETE  #> There are no items to DELETE  # }"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroDoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Use DOI to acquire metadata — ZoteroDoi","title":"Use DOI to acquire metadata — ZoteroDoi","text":"Connects doi.org create metadata","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroDoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use DOI to acquire metadata — ZoteroDoi","text":"","code":"ZoteroDoi(   doi,   meta = list(),   use.semantic = TRUE,   check.retraction = TRUE,   use.json = TRUE,   silent = TRUE,   log = list() )"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroDoi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use DOI to acquire metadata — ZoteroDoi","text":"doi digital object identifier meta list collecting metadata used create , Default: list() use.semantic Get metadata (abstract) Semantic Scholar, Default: FALSE check.retraction Check marked retracted, Default: TRUE use.json Use either json (TRUE) XML (FALSE), Default: TRUE silent c2z noisy, tell quiet, Default: TRUE log list storing log elements, Default: list()","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroDoi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use DOI to acquire metadata — ZoteroDoi","text":"Zotero-type matrix (tibble)","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroDoi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use DOI to acquire metadata — ZoteroDoi","text":"Please see https://oeysan.github.io/c2z/","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/ZoteroDoi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use DOI to acquire metadata — ZoteroDoi","text":"","code":"# \\donttest{   # Simple use of `ZoteroDoi`   example <- ZoteroDoi(\"10.1126/sciadv.abd1705\")    # Print index using `ZoteroIndex`   if (any(nrow(example$data))) {   ZoteroIndex(example$data) |>     dplyr::select(name) |>     print(width = 80)   } #> # A tibble: 1 × 1 #>   name                                                                           #>   <chr>                                                                          #> 1 Serra-Garcia & Gneezy (2021) Nonreplicable publications are cited more than r… # }"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroEnhancer.html","id":null,"dir":"Reference","previous_headings":"","what":"Enhance Zotero Records with External Metadata via Zotero Lookups — ZoteroEnhancer","title":"Enhance Zotero Records with External Metadata via Zotero Lookups — ZoteroEnhancer","text":"function iterates data frame (tibble) Zotero records attempts enhance record retrieving additional metadata external sources. uses DOI ISBN information, via c2z package, fetch external metadata merges updates original Zotero record. Special handling provided records representing book sections.","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroEnhancer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enhance Zotero Records with External Metadata via Zotero Lookups — ZoteroEnhancer","text":"","code":"ZoteroEnhancer(   zotero.data,   external.data = NULL,   use.doi = TRUE,   use.semantic = TRUE,   use.isbn = TRUE )"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroEnhancer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enhance Zotero Records with External Metadata via Zotero Lookups — ZoteroEnhancer","text":"zotero.data data frame (tibble) containing Zotero records. row represents record may include fields abstractNote, DOI, url, ISBN, key, itemType, pages, creators. external.data Optional. data frame list containing pre-fetched external metadata. provided non-empty, function use external metadata update Zotero records instead querying external APIs. Defaults NULL. use.doi Logical; TRUE (default), function attempt retrieve external metadata using DOI information. Defaults TRUE. use.semantic Logical; TRUE (default), function attempt retrieve external metadata Semantic Scholar using DOI information. Defaults TRUE. use.isbn Logical; TRUE (default), function attempt retrieve external metadata using ISBN information DOI retrieval successful. Defaults TRUE.","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroEnhancer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enhance Zotero Records with External Metadata via Zotero Lookups — ZoteroEnhancer","text":"data frame containing enhanced Zotero records external metadata merged original records.","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroEnhancer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Enhance Zotero Records with External Metadata via Zotero Lookups — ZoteroEnhancer","text":"record zotero.data, function performs following steps: external.data provided non-empty, data used update record. Otherwise, function skips processing record abstract already exists. attempts extract DOI DOI field, missing, url field. ISBN field processed removing spaces extracting first value (case comma separation). valid DOI found use.doi TRUE, external metadata retrieved using c2z::ZoteroDoi().         Otherwise, ISBN available use.isbn TRUE, metadata retrieved using c2z::ZoteroIsbn(). external metadata successfully retrieved, internal helper function UpdateTibble called.         helper function merges external metadata original record. book sections, additional         adjustments made handle creator information, pages, edition fields. Finally, enhanced record merged back original data frame using UpdateInsert().","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroEnhancer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enhance Zotero Records with External Metadata via Zotero Lookups — ZoteroEnhancer","text":"","code":"if (FALSE) { # \\dontrun{   # Enhance Zotero records using DOI/ISBN lookup:   example <- Cristin(\"762394\", silent = TRUE)$results   print(example$libraryCatalog)   example$DOI <- \"https://doi.org/10.22358/jafs/74164/2007\"   enhanced.data <- ZoteroEnhancer(example)   print(enhanced.data$libraryCatalog) } # }"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroExport.html","id":null,"dir":"Reference","previous_headings":"","what":"Export Zotero items to bibliography — ZoteroExport","title":"Export Zotero items to bibliography — ZoteroExport","text":"Export Zotero items specified format (e.g., BibLaTeX) using   CSL format (e.g., APA7)","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroExport.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Zotero items to bibliography — ZoteroExport","text":"","code":"ZoteroExport(   zotero,   csl.type = NULL,   csl.name = \"style\",   locale = \"en-US\",   format = \"biblatex\",   bib.name = \"references\",   save.data = FALSE,   save.path = NULL,   silent = FALSE )"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroExport.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export Zotero items to bibliography — ZoteroExport","text":"zotero list information specified Zotero library (e.g., id, API key, collections, items) csl.type Specify CSL type Official repository Citation Style Language (CSL), Default: NULL csl.name Name saved CSL file, Default: 'style' locale Desired language format bibliography, Default: 'en-US' format Export format Zotero items, Default: 'biblatex' bib.name Name exported bibliography, Default: 'references' save.data Save data (e.g., bibliography) disk, Default: FALSE save.path Location store data disk, Default: NULL silent c2z noisy, tell quiet, Default: FALSE","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroExport.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export Zotero items to bibliography — ZoteroExport","text":"list information specified Zotero library (e.g.,   exported items, bibliography citations)","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroExport.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export Zotero items to bibliography — ZoteroExport","text":"Please see   https://oeysan.github.io/c2z/","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/ZoteroExport.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export Zotero items to bibliography — ZoteroExport","text":"","code":"# \\donttest{   # Define Zotero list according to default group   zotero = Zotero(     user = FALSE,     id = \"4827927\",     api = \"Io1bwAiOjB1jPgUNegjJhJxF\",     item.type = \"-attachment || note\",     max.result = 1,     library = TRUE   ) #> Searching for collections  #> Found 5 collections  #> The Zotero list contains: 5 collections, 0 items, and 0 attachments  #> Searching for all items in library  #> Found 3 items  #> The provided query is limited to 1 result  #> The Zotero list contains: 5 collections, 1 item, and 0 attachments     # Export 1 items from the default group   example <- ZoteroExport(     zotero   ) #> Found 1 `biblatex` reference    # Display exported   cat(example$export, fill = 80) #>  #> @incollection{faldet_vygotsky_2023, #> \tlocation = {Oslo}, #> \ttitle = {Vygotsky med {VR}-briller}, #> \tisbn = {9788202811501}, #> \turl = {https://doi.org/10.23865/noasp.191.ch11}, #> \tpages = {197--216}, #> \tbooktitle = {Læring i et Vygotsky-perspektiv: muligheter og konsekvenser for opplæringen}, #> \tpublisher = {Cappelen Damm akademisk}, #> \tauthor = {Somby, Hege Merete and Stalheim, Odd Rune}, #> \teditor = {Faldet, Ann-Cathrin and Skrefsrud, Thor Andre and Somby, Hege Merete}, #> \turldate = {2024-04-10}, #> \tdate = {2023}, #> \tlangid = {nynorsk}, #> \tdoi = {10.23865/noasp.191.ch11}, #> \tnote = {{NVI}: 1 #> Cristin: 2160921}, #> } #>  # }"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroFormat.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a Zotero friendly format of input data — ZoteroFormat","title":"Make a Zotero friendly format of input data — ZoteroFormat","text":"Make Zotero friendly format input data, add zotero key.","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroFormat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a Zotero friendly format of input data — ZoteroFormat","text":"","code":"ZoteroFormat(   data = NULL,   format = NULL,   prefix = NULL,   check.structure = FALSE,   fix.columns = TRUE,   silent = FALSE )"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroFormat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a Zotero friendly format of input data — ZoteroFormat","text":"data list metadata something else, Default: NULL format format input data (e.g., 'JSON', 'versions', 'keys). , Default: NULL prefix Add prefix metadata (e.g., user/userID), Default: NULL check.structure Check structure data frame correct according Zotero type, Default: FALSE fix.columns Remove columns part Zotero type, Default: TRUE silent c2z noisy, tell quiet, Default: TRUE","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroFormat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a Zotero friendly format of input data — ZoteroFormat","text":"zotero friendly tibble requested otherwise format data according format.","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/ZoteroFormat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a Zotero friendly format of input data — ZoteroFormat","text":"","code":"# \\donttest{   ZoteroFormat(     list(title = \"This is a test\", itemType = \"document\")   ) #> # A tibble: 1 × 5 #>   key      version title          itemType relations    #>   <chr>      <dbl> <chr>          <chr>    <list>       #> 1 PGYLT2RB       0 This is a test document <df [0 × 0]> # }"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroGet.html","id":null,"dir":"Reference","previous_headings":"","what":"Get collections and items from a Zotero library — ZoteroGet","title":"Get collections and items from a Zotero library — ZoteroGet","text":"Get","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroGet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get collections and items from a Zotero library — ZoteroGet","text":"","code":"ZoteroGet(   zotero,   use.collection = TRUE,   use.item = FALSE,   append.collections = FALSE,   append.items = FALSE,   append.top = FALSE,   append.file = FALSE,   custom.url = NULL,   open.query = NULL,   limit = 100,   start = 0,   format = \"json\",   item.keys = NULL,   collection.keys = NULL,   item.type = NULL,   library.type = NULL,   linkwrap = 1,   style = \"apa\",   locale = \"en-US\",   all.results = TRUE,   max.results = NULL,   result.type = NULL,   force = FALSE,   silent = FALSE )"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroGet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get collections and items from a Zotero library — ZoteroGet","text":"zotero list information specified Zotero library (e.g., id, API key, collections, items) use.collection Use collection key present Zotero list, Default: TRUE use.item Use item key present Zotero list, Default: FALSE append.collections Append `/collections/` Zotero API url, Default: FALSE append.items Append `/items/` Zotero API url, Default: FALSE append.top Append `/top/` Zotero API url, Default: FALSE append.file Append `/file/` Zotero API url, Default: FALSE custom.url Use custom Zotero API url, Default: NULL open.query Use query, Default: NULL limit Number results per query (max 100), Default: 100 start Starting position query (0 = first result), Default: 0 format Format response Zotero API, Default: 'json' item.keys Specified vector items keys, Default: NULL collection.keys Specified vector collection keys, Default: NULL item.type Items search (NULL = everything), Default: NULL library.type Commma-separated data Zotero (.e., data, bib, citation), Default: NULL linkwrap Set URL (e.g., DOI) HTML link (1 = yes), Default: 1 style Citation style use appended bibliography /citations, Default: apa locale Desired language format bibliography, Default: 'en-US' .results Find results query, Default: TRUE max.results need limit?, Default: NULL result.type Pointless linguistics display result type (default = `result`), Default: NULL force Force seldom wise, sometimes..., Default: FALSE silent c2z noisy, tell quiet, Default: FALSE","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroGet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get collections and items from a Zotero library — ZoteroGet","text":"list information specified Zotero library (e.g.,   collections items)","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroGet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get collections and items from a Zotero library — ZoteroGet","text":"Please see   https://oeysan.github.io/c2z/","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/ZoteroGet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get collections and items from a Zotero library — ZoteroGet","text":"","code":"# \\donttest{   # Define Zotero list according to default setings   zotero = Zotero(     user = FALSE,     id = \"5250382\",     api = \"Io1bwAiOjB1jPgUNegjJhJxF\"   )    # Query default group Zotero library for 1 item   example <- ZoteroGet(     zotero,     max.results = 1   ) #> Found 1 result     # Print index using `ZoteroIndex`   if (any(nrow(example$results))) {   ZoteroIndex(example$results) |>     dplyr::select(name) |>     print(width = 80)   } #> # A tibble: 1 × 1 #>   name                                                                           #>   <chr>                                                                          #> 1 Serra-Garcia & Gneezy (2021) Nonreplicable publications are cited more than r… # }"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroGov.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrangle regjeringen.no metadata into Zotero-type format — ZoteroGov","title":"Wrangle regjeringen.no metadata into Zotero-type format — ZoteroGov","text":"Query regjeringen search word type fetch metadata","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroGov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrangle regjeringen.no metadata into Zotero-type format — ZoteroGov","text":"","code":"ZoteroGov(search, type = \"NOU\", meta = list(), silent = TRUE, log = list())"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroGov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrangle regjeringen.no metadata into Zotero-type format — ZoteroGov","text":"search Search term (e.g., 2018: 2) type type query (e.g., white paper, official norwegian reports), Default: \"NOU\" meta list collecting metadata used create , Default: list() silent c2z noisy, tell quiet, Default: TRUE log list storing log elements, Default: list()","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroGov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrangle regjeringen.no metadata into Zotero-type format — ZoteroGov","text":"Zotero-type matrix (tibble)","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroGov.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrangle regjeringen.no metadata into Zotero-type format — ZoteroGov","text":"Please see   https://oeysan.github.io/c2z/","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/ZoteroGov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrangle regjeringen.no metadata into Zotero-type format — ZoteroGov","text":"","code":"# \\donttest{   # Search the default entity, Norwegian official reports in regjeringen.no   example <- ZoteroGov(\"2001:4\")   # Print index using `ZoteroIndex`   if (any(nrow(example$data))) {   ZoteroIndex(example$data) |>     dplyr::select(name) |>     print(width = 80)   } #> # A tibble: 1 × 1 #>   name                                                #>   <chr>                                               #> 1 NOU 2001: 4 (2001) Helseopplysninger i arbeidslivet # }"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an index of Zotero items — ZoteroIndex","title":"Create an index of Zotero items — ZoteroIndex","text":"function creates index containing key information   present Zotero items","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an index of Zotero items — ZoteroIndex","text":"","code":"ZoteroIndex(data)"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an index of Zotero items — ZoteroIndex","text":"data Tibble containing Zotero-type metadata (e.g., Cristin)","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroIndex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an index of Zotero items — ZoteroIndex","text":"tibble","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroIndex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an index of Zotero items — ZoteroIndex","text":"Please see   https://oeysan.github.io/c2z/","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/ZoteroIndex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an index of Zotero items — ZoteroIndex","text":"","code":"# \\donttest{   # Access the default group library   example = Zotero(     user = FALSE,     id = \"4827927\",     api = \"Io1bwAiOjB1jPgUNegjJhJxF\",     library = TRUE   ) #> Searching for collections  #> Found 5 collections  #> The Zotero list contains: 5 collections, 0 items, and 0 attachments  #> Searching for all items in library  #> Found 3 items  #> The Zotero list contains: 5 collections, 3 items, and 0 attachments    # Print index using `ZoteroIndex`   if (any(nrow(example$items))) {   ZoteroIndex(example$items) |>     dplyr::select(name) |>     print(width = 80)   } #> # A tibble: 3 × 1 #>   name                                                                           #>   <chr>                                                                          #> 1 Mishra et al. (2023) Exploring Active and Critical Engagement in Human-Robot … #> 2 Somby & Stalheim (2023) Vygotsky med VR-briller                                #> 3 Somby & Vik (2023) Vygotskys defektologi - et perspektiv på inkluderende oppl… # }"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroIsbn.html","id":null,"dir":"Reference","previous_headings":"","what":"Search libraries using ISBN or MMS ID — ZoteroIsbn","title":"Search libraries using ISBN or MMS ID — ZoteroIsbn","text":"Query libraries using ISBN (MMS ID) fetch metadata","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroIsbn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search libraries using ISBN or MMS ID — ZoteroIsbn","text":"","code":"ZoteroIsbn(keys, meta = list(), silent = TRUE, log = list())"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroIsbn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search libraries using ISBN or MMS ID — ZoteroIsbn","text":"keys Keys search (e.g., ISBN MMS ID) meta list collecting metadata used create , Default: list() silent c2z noisy, tell quiet, Default: TRUE log list storing log elements, Default: list()","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroIsbn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search libraries using ISBN or MMS ID — ZoteroIsbn","text":"Zotero-type matrix (tibble)","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroIsbn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search libraries using ISBN or MMS ID — ZoteroIsbn","text":"Please see https://oeysan.github.io/c2z/","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/ZoteroIsbn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search libraries using ISBN or MMS ID — ZoteroIsbn","text":"","code":"# \\donttest{   # Search libraries for ISBN metadata   example <- ZoteroIsbn(\"978-1529797138\")    # Print index using `ZoteroIndex`   if (any(nrow(example$data))) {   ZoteroIndex(example$data) |>     dplyr::select(name) |>     print(width = 80)   } #> # A tibble: 1 × 1 #>   name                                                         #>   <chr>                                                        #> 1 Field (2022) Adventure in statistics: the reality enigma, An # }"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroKey.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Zotero key or write token — ZoteroKey","title":"Create Zotero key or write token — ZoteroKey","text":"Create identifier Zotero items/collections write   token library","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroKey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Zotero key or write token — ZoteroKey","text":"","code":"ZoteroKey(token = FALSE)"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroKey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Zotero key or write token — ZoteroKey","text":"token Create write token, Default: FALSE","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroKey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Zotero key or write token — ZoteroKey","text":"return 8 character Zotero key 32 character write token","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroKey.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Zotero key or write token — ZoteroKey","text":"Please see   https://oeysan.github.io/c2z/","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroKey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Zotero key or write token — ZoteroKey","text":"","code":"# Create a Zotero key key <- ZoteroKey() # Create a write token token <- ZoteroKey(TRUE)"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroLibrary.html","id":null,"dir":"Reference","previous_headings":"","what":"Access the Zotero library — ZoteroLibrary","title":"Access the Zotero library — ZoteroLibrary","text":"function uses information stored `zotero` list   access specified collections items Zotero library","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroLibrary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access the Zotero library — ZoteroLibrary","text":"","code":"ZoteroLibrary(   zotero,   case.insensitive = TRUE,   ancestor = FALSE,   recursive = FALSE,   create = FALSE,   limit = 100,   start = 0,   search.collections = TRUE,   get.collections = TRUE,   get.items = TRUE,   item.type = NULL,   all.results = TRUE,   max.results = NULL,   library.type = NULL,   linkwrap = 1,   style = \"apa\",   locale = \"en-US\",   force = FALSE,   silent = FALSE )"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroLibrary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access the Zotero library — ZoteroLibrary","text":"zotero list information specified Zotero library (e.g., id, API key, collections, items) case.insensitive Disregard letter casing searching collections, Default: TRUE ancestor Trace lineage collection (.e., find top-level collection), Default: FALSE recursive Find nested collections, Default: FALSE create Create missing collections, Default: FALSE limit Number results per query (max 100), Default: 100 start Starting position query (0 = first result), Default: 0 search.collections Search collections collection.key fails, Default: TRUE get.collections Fetch collections, Default: TRUE get.items Fetch items, Default: TRUE item.type Items search (NULL = everything), Default: NULL .results Find results query, Default: TRUE max.results need limit?, Default: NULL library.type Commma-separated data Zotero (.e., data, bib, citation), Default: NULL linkwrap Set URL (e.g., DOI) HTML link (1 = yes), Default: 1 style Citation style use appended bibliography /citations, Default: apa locale Desired language format bibliography, Default: 'en-US' force Force seldom wise, sometimes..., Default: FALSE silent c2z noisy, tell quiet, Default: FALSE","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroLibrary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access the Zotero library — ZoteroLibrary","text":"list information specified Zotero library (e.g.,   collections items)","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroLibrary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Access the Zotero library — ZoteroLibrary","text":"Please see   https://oeysan.github.io/c2z/","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/ZoteroLibrary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access the Zotero library — ZoteroLibrary","text":"","code":"# \\donttest{   # Access the default group library   example <- ZoteroLibrary(     Zotero(       user = FALSE,       id = \"4827927\",       api = \"Io1bwAiOjB1jPgUNegjJhJxF\"     )   ) #> Searching for collections  #> Found 5 collections  #> Searching for all items in library  #> Found 3 items  #> The Zotero list contains: 5 collections, 3 items, and 0 attachments    # Print index using `ZoteroIndex`   if (any(nrow(example$items))) {     ZoteroIndex(example$items) |>       dplyr::select(name) |>       print(width = 80)   } #> # A tibble: 3 × 1 #>   name                                                                           #>   <chr>                                                                          #> 1 Mishra et al. (2023) Exploring Active and Critical Engagement in Human-Robot … #> 2 Somby & Stalheim (2023) Vygotsky med VR-briller                                #> 3 Somby & Vik (2023) Vygotskys defektologi - et perspektiv på inkluderende oppl… # }"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroMatch.html","id":null,"dir":"Reference","previous_headings":"","what":"Search or match items using CrossRef — ZoteroMatch","title":"Search or match items using CrossRef — ZoteroMatch","text":"Use CrossRef API match data (e.g., Cristin metadata   Crossref metadata) search title, authors date","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroMatch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search or match items using CrossRef — ZoteroMatch","text":"","code":"ZoteroMatch(   title,   authors,   date,   haystack = NULL,   haystack.size = 3,   crossref.search = FALSE,   autosearch = FALSE,   cristin.data = NULL,   external.data = NULL,   polite = TRUE,   silent = FALSE,   use.semantic = FALSE,   log = list() )"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroMatch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search or match items using CrossRef — ZoteroMatch","text":"title Title reference authors creators reference date publication date reference haystack Potential matches search term (.e., needle), Default: NULL haystack.size Number items haystack, Default: 3 crossref.search Search CrossRef needle found haystack, Default: FALSE autosearch Match automatically compare needle haystack, Default: FALSE cristin.data Metadata Cristin, Default: NULL external.data Metadata external source (e.g., CrossRef), Default: NULL polite use email stored `.Renviron`, Default: TRUE silent Running silent, running deep, Default: FALSE use.semantic Prefer metadata Semantic Scholar, Default: FALSE log list storing log elements, Default: list()","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroMatch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search or match items using CrossRef — ZoteroMatch","text":"Zotero-type matrix (tibble) match found otherwise NULL","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroMatch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search or match items using CrossRef — ZoteroMatch","text":"Please see   https://oeysan.github.io/c2z/","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/ZoteroMatch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search or match items using CrossRef — ZoteroMatch","text":"","code":"# \\donttest{   # Conduct an autosearch in CrossRef using title, authors and date   example <- ZoteroMatch(     title = \"Nonreplicable publications\",     authors = \"Serra-Garcia & Gneezy\",     date = \"2021\",     autosearch = TRUE   ) #> Status 200: Zotero Match is OK.  #> Found 1 potential match     # Print index using `ZoteroIndex`   if (any(nrow(example$data))) {   ZoteroIndex(example$data) |>     dplyr::select(name) |>     print(width = 80)   } #> # A tibble: 1 × 1 #>   name                                                                           #>   <chr>                                                                          #> 1 Serra-Garcia & Gneezy (2021) Nonreplicable publications are cited more than r… # }"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroPost.html","id":null,"dir":"Reference","previous_headings":"","what":"Post collections and items to a Zotero library — ZoteroPost","title":"Post collections and items to a Zotero library — ZoteroPost","text":"Create update collections items specified library","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroPost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post collections and items to a Zotero library — ZoteroPost","text":"","code":"ZoteroPost(   zotero,   post.collections = TRUE,   post.items = TRUE,   post.attachments = TRUE,   post.limit = 50,   post.token = FALSE,   force = FALSE,   silent = FALSE )"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroPost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post collections and items to a Zotero library — ZoteroPost","text":"zotero list information specified Zotero library (e.g., id, API key, collections, items) post.collections Try copy specified collections, Default: TRUE post.items Try copy specified items?, Default: TRUE post.attachments Try copy specified extras (.e., attachments notes)?, Default: TRUE post.limit Number collections/items post per request (max 50), Default: 50 post.token Use Zotero-Write-Token (TRUE) -Unmodified-Since-Version (FALSE), Default: FALSE force Force seldom wise, sometimes..., Default: FALSE silent c2z noisy, tell quiet, Default: FALSE","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroPost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post collections and items to a Zotero library — ZoteroPost","text":"list information specified Zotero library (e.g., posted   collections items)","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroPost.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Post collections and items to a Zotero library — ZoteroPost","text":"Please see   https://oeysan.github.io/c2z/","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/reference/ZoteroPost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post collections and items to a Zotero library — ZoteroPost","text":"","code":"# \\donttest{   # Connect to the public group \"c2z_delete\"   # NB! This process can be done using only `Zotero` (see README)   zotero <- Zotero(     user = FALSE,     id = \"4988497\",     api = \"Io1bwAiOjB1jPgUNegjJhJxF\"   )    # Create a new collection for POST   zotero$collections <- tibble::tibble(     key = ZoteroKey(),     version = 0,     name = \"Post-test\",     parentCollection = \"FALSE\"   )    # Add item to post using `ZoteroAdd` (and `ZoteroDoi`)   zotero <- ZoteroAdd(     zotero,     doi = \"10.1126/sciadv.abd1705\"   ) #> Searching 1 item using DOI     # Post a DOI to the public group \"c2z_delete\"   post.example <- ZoteroPost(     zotero,     post.collections = TRUE,     post.items = TRUE   ) #> Adding 1 collection to library using 1 POST request  #>  —————————————————Process: 100.00% (1/1). Elapsed time: 00:00:00————————————————— #> $post.status.collections #> # A tibble: 1 × 2 #>   status  key      #>   <fct>   <chr>    #> 1 success CBC9JNI6 #>  #> $post.summary.collections #> # A tibble: 1 × 2 #>   status  summary #>   <fct>     <int> #> 1 success       1 #>  #>  #> Adding 1 item to library using 1 POST request  #>  —————————————————Process: 100.00% (1/1). Elapsed time: 00:00:00————————————————— #> $post.status.items #> # A tibble: 1 × 2 #>   status  key      #>   <fct>   <chr>    #> 1 success G6UDRVUI #>  #> $post.summary.items #> # A tibble: 1 × 2 #>   status  summary #>   <fct>     <int> #> 1 success       1 #>  #>     # Delete collections and items using `ZoteroDelete`   delete.example <- ZoteroDelete(     post.example,     delete.collections = TRUE,     delete.items = TRUE   ) #> Deleting 1 collection using 1 DELETE request  #>  —————————————————Process: 100.00% (1/1). Elapsed time: 00:00:00————————————————— #> Deleting 1 item using 1 DELETE request  #>  —————————————————Process: 100.00% (1/1). Elapsed time: 00:00:00—————————————————    # Print index using `ZoteroIndex`   if (any(nrow(post.example$items))) {     ZoteroIndex(post.example$items) |>       dplyr::select(name) |>       print(width = 80)   } #> # A tibble: 1 × 1 #>   name                                                                           #>   <chr>                                                                          #> 1 Serra-Garcia & Gneezy (2021) Nonreplicable publications are cited more than r… # }"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroTypes.html","id":null,"dir":"Reference","previous_headings":"","what":"List with empty zotero-items — ZoteroTypes","title":"List with empty zotero-items — ZoteroTypes","text":"tibble list represents zotero-item","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroTypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List with empty zotero-items — ZoteroTypes","text":"","code":"ZoteroTypes(type = NULL, names = TRUE)"},{"path":"https://oeysan.github.io/c2z/reference/ZoteroTypes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List with empty zotero-items — ZoteroTypes","text":"list 36 tibbles zero rows various columns","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroTypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List with empty zotero-items — ZoteroTypes","text":"type Type zotero-item, Default: NULL names return column names set TRUE, Default: TRUE","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroTypes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List with empty zotero-items — ZoteroTypes","text":"Either list zotero-items specified item","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroTypes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List with empty zotero-items — ZoteroTypes","text":"Used create Zotero-items list metadata","code":""},{"path":"https://oeysan.github.io/c2z/reference/ZoteroTypes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List with empty zotero-items — ZoteroTypes","text":"","code":"# All zotero-items names(ZoteroTypes()) #>  [1] \"artwork\"             \"audioRecording\"      \"bill\"                #>  [4] \"blogPost\"            \"book\"                \"bookSection\"         #>  [7] \"case\"                \"conferencePaper\"     \"dictionaryEntry\"     #> [10] \"document\"            \"email\"               \"encyclopediaArticle\" #> [13] \"film\"                \"forumPost\"           \"hearing\"             #> [16] \"instantMessage\"      \"interview\"           \"journalArticle\"      #> [19] \"letter\"              \"magazineArticle\"     \"manuscript\"          #> [22] \"map\"                 \"newspaperArticle\"    \"note\"                #> [25] \"patent\"              \"podcast\"             \"preprint\"            #> [28] \"presentation\"        \"radioBroadcast\"      \"report\"              #> [31] \"computerProgram\"     \"statute\"             \"tvBroadcast\"         #> [34] \"thesis\"              \"videoRecording\"      \"webpage\"             # Column names of item-type `book` ZoteroTypes(\"book\") #>  [1] \"itemType\"        \"title\"           \"creators\"        \"abstractNote\"    #>  [5] \"series\"          \"seriesNumber\"    \"volume\"          \"numberOfVolumes\" #>  [9] \"edition\"         \"place\"           \"publisher\"       \"date\"            #> [13] \"numPages\"        \"language\"        \"ISBN\"            \"shortTitle\"      #> [17] \"url\"             \"accessDate\"      \"archive\"         \"archiveLocation\" #> [21] \"libraryCatalog\"  \"callNumber\"      \"rights\"          \"extra\"           #> [25] \"tags\"            \"collections\"     \"relations\""},{"path":[]},{"path":"https://oeysan.github.io/c2z/news/index.html","id":"major-development-version","dir":"Changelog","previous_headings":"","what":"Major","title":"c2z (development version)","text":"Cristin can now use futureverse package (progressr) parallel processing. can greatly reduce runtime.","code":""},{"path":"https://oeysan.github.io/c2z/news/index.html","id":"breaking-development-version","dir":"Changelog","previous_headings":"","what":"Breaking","title":"c2z (development version)","text":"Moved CristinMonthly CristinUnits, including several internal functions (e.g., CristinMail CristinWeb Dict) c2z4uni keep maintenance simpler.","code":""},{"path":"https://oeysan.github.io/c2z/news/index.html","id":"minor-development-version","dir":"Changelog","previous_headings":"","what":"Minor","title":"c2z (development version)","text":"Fixed bug CristinSupported presentationType always set English regardless requested language. Added internal function ApaTitle helpe producing titles Title Case input CAPITAL LETTERS. Added options ot use post.token, Zotero-Write-Token (TRUE) -Unmodified-Since-Version (FALSE), ZoteroPost Made zotero.types globally available. Slimmed ZoteroWrangler, preperation adding new Cris/NVA. Added several functions aid process enhancing metadata using ZoteroEnhancer ProcessData parallel processing. Fixed bug ZoteroIndex items use shortTitle title. Fixed changes ZoteroGov due changes API regjeringen.Fixed bug internal function CleanText failed remove dots. Fixed bug ZoteroDoi regex pattern caused error DOis. Fixed bug ZoteroGet Zotero now enforces limit 25 items per query bibliography citation data. Fixed bug CristinWrangler empty creators field caused error deciding use external data Cristin data. Added internal function CrossrefRetracted check whether CrossRef (Retraction Watch) marked publication/DOI retracted api.labs. true [RETRACTED] added prefix title publication. Added internal functions UnescapeHtml HtmlCollapse improve fetching abstracts XML. Added internal function SemanticScholar provide better abstracts ZoteroDoi (using use.semantic set TRUE). Added internal function InsertUpdate update/insert zotero items key. Fixed minor bug CristinWrangler empty external.creators Fixed bug ZoteroDelete function failed get latest version library. Exported previously internal ZoteroFormat. can now check structure provided tibble/dataframe using check.structure argument. Fixed error DoiCrossref sub.type length > 1 type (e.g., “preprint”) succesfully extracted rvest. Made CristinWrangler somewhat less cumbersome. Made small adjustment ZoteroIsbn edited books contained 100 700 fields leading error first editor also listed first author rather listing editors. Added option filter non-nvi publication Cristin, using logical argument nvi, default FALSE. Improved speed ZoteroDelete. Moved Cls ZoteroExport universal handling. Fixed bug ZoteroExport ZoteroGET reported wrong number results. Added full.update argument (default: TRUE) CristinMonthly, set false function create bibliography new items. Fixed bug ZoteroLibrary function return NULL searching non-existing collection keys. Fixed bug ZoteroGET using item/collection keys result maximum result 100 items/collections. Creted internal function Dict handle language output, moment English Norwegian. Minor adjustments CristinMonthly internal functions CristinMail CristinWeb. Removed limit Zotero API requsted format versions keys.","code":""},{"path":"https://oeysan.github.io/c2z/news/index.html","id":"c2z-020","dir":"Changelog","previous_headings":"","what":"c2z 0.2.0","title":"c2z 0.2.0","text":"CRAN release: 2023-08-10","code":""},{"path":"https://oeysan.github.io/c2z/news/index.html","id":"feature-0-2-0","dir":"Changelog","previous_headings":"","what":"Feature","title":"c2z 0.2.0","text":"Added function Cristinunits create tibble information (nested) units Cristin (e.g., University -> Faculties -> Departments -> Groups). tibble can used extract data unit Cristin. Added function CristinMonthly create per month Zotero collections units defined Cristinunits. may use internal functions CristinMail CristinWeb create newsletter using HTML email web, respectively.","code":""},{"path":"https://oeysan.github.io/c2z/news/index.html","id":"critical-0-2-0","dir":"Changelog","previous_headings":"","what":"Critical","title":"c2z 0.2.0","text":"Fixed bug ZoteroFormat parentCollection key, special cases, identified logical rather character (Zotero uses combination logical character field). error caused error combining collections. Fixed bug ZoteroWrangler book sections empty creators main book caused NA error.","code":""},{"path":"https://oeysan.github.io/c2z/news/index.html","id":"major-0-2-0","dir":"Changelog","previous_headings":"","what":"Major","title":"c2z 0.2.0","text":"Made major revision ZoteroLibray, making less recursive bloated.","code":""},{"path":"https://oeysan.github.io/c2z/news/index.html","id":"moderate-0-2-0","dir":"Changelog","previous_headings":"","what":"Moderate","title":"c2z 0.2.0","text":"Made handling API status codes consistent throughout package. Removed now somewhat redundant debug checks.","code":""},{"path":"https://oeysan.github.io/c2z/news/index.html","id":"minor-0-2-0","dir":"Changelog","previous_headings":"","what":"Minor","title":"c2z 0.2.0","text":"Fixed bug CristinWrangler successfully identified duplicates modified content Cristin failed update key, version collections, thus creating new copies rather updating existing items. Removed hyphens ISBN importing Cristin simplify filtering. Fixed bug CristinWrangler remove.na set TRUE rather forcing item-type book (part_of) book chapters. Fixed issue ZoteroLibrary zero collections reported finding specific collection key. Fixed issue ZoteroFormat tags listed either data.frame list Fixed issue CristinWrangler creatorType parent items listed authors (probably) editors. Fixed issue DoiCrossref first last names sometimes switched due alt-name field XML. Fixed issues badges README. Made adjustments ZoteroGet. bibliography now contains, addition bib, bib.body bib.item separating style form reference. Created internal function called ZoteroId extract ids extra field. Added internal functions handle dates: Months display (abbreviated) month names Norwegian English, ChangeDate add/subtract date date (e.g., days, weeks, months), FloorDate set first day month, CeilingDate set last day month. Added flowchart, .","code":""},{"path":"https://oeysan.github.io/c2z/news/index.html","id":"c2z-014","dir":"Changelog","previous_headings":"","what":"c2z 0.1.4","title":"c2z 0.1.4","text":"CRAN release: 2023-03-23 Resubmission CRAN: Part Deux","code":""},{"path":"https://oeysan.github.io/c2z/news/index.html","id":"moderate-0-1-4","dir":"Changelog","previous_headings":"","what":"Moderate","title":"c2z 0.1.4","text":"Moved CristinSupported CristinWrangler Cristin better manage filtering items, reduce number lines (666) CristinWrangler manageable function (522).","code":""},{"path":"https://oeysan.github.io/c2z/news/index.html","id":"minor-0-1-4","dir":"Changelog","previous_headings":"","what":"Minor","title":"c2z 0.1.4","text":"Moved option include HTML bibliography ZoteroExport ZoteroLibrary avoid redundant API calls. Omitted redundant “R” end title DESCRIPTION. Made examples exported functions executable. functions, except Zotero CristinSupported, set within \\donttest, functions, either directly indirectly calls various API’s, may violate CRAN’s 5 second limit.","code":""},{"path":"https://oeysan.github.io/c2z/news/index.html","id":"c2z-013","dir":"Changelog","previous_headings":"","what":"c2z 0.1.3","title":"c2z 0.1.3","text":"Resubmission CRAN","code":""},{"path":"https://oeysan.github.io/c2z/news/index.html","id":"critical-0-1-3","dir":"Changelog","previous_headings":"","what":"Critical","title":"c2z 0.1.3","text":"Fixed error ZoteroDoi account spaces within DOI (e.g., 10.3390/ foods12061167)","code":""},{"path":"https://oeysan.github.io/c2z/news/index.html","id":"moderate-0-1-3","dir":"Changelog","previous_headings":"","what":"Moderate","title":"c2z 0.1.3","text":"Made ZoteroGet split itemKey collectionKey lists keys based limit argument, Zotero API limit using multiple keys fashion ordinary query (.e., based start limit intervals). Made retrieving bibliography citation fields Zotero elegant.","code":""},{"path":"https://oeysan.github.io/c2z/news/index.html","id":"minor-0-1-3","dir":"Changelog","previous_headings":"","what":"Minor","title":"c2z 0.1.3","text":"Fixed broken URLs. Added single quotes (software) names Description field DESCRIPTION. Separated counting items (n.items) attachments (n.attachments). Fixed another million typos.","code":""},{"path":"https://oeysan.github.io/c2z/news/index.html","id":"c2z-012","dir":"Changelog","previous_headings":"","what":"c2z 0.1.2","title":"c2z 0.1.2","text":"Submission CRAN","code":""},{"path":[]},{"path":"https://oeysan.github.io/c2z/news/index.html","id":"critical-0-1-1","dir":"Changelog","previous_headings":"","what":"Critical","title":"c2z 0.1.1","text":"Added internal function FixCreators correct Zotero items creators listed lastName empty firstName rather using name . error caused crash ZoteroIndex. Fixed Zoteronot able use empty API key access public libraries","code":""},{"path":"https://oeysan.github.io/c2z/news/index.html","id":"minor-0-1-1","dir":"Changelog","previous_headings":"","what":"Minor","title":"c2z 0.1.1","text":"Added examples vignette prior CRAN submission. Made optional include items ZoteroLibrary. Added internal function ErrorCode provide information JSON response codes. Made adjustments ZoteroGet option define results name (e.g., collections items). Made adjustments noise levels silent argument, somewhat inconsistent different functions. Still happy amount feedback recursive operations. Fixed million typos.","code":""},{"path":"https://oeysan.github.io/c2z/news/index.html","id":"c2z-010","dir":"Changelog","previous_headings":"","what":"c2z 0.1.0","title":"c2z 0.1.0","text":"Initial launch following features: Add, edit, copy, delete (nested) Zotero collections. Add, edit, copy, delete Zotero items, including attachments. Export Zotero items R BibLaTeX (formats). (Batch) import common references Cristin. Currently supported formats: books (e.g., monographs, anthologies), book chapters, journal articles, presentations (e.g., lectures), opinions pieces. (Batch) import references ISBN DOI. Currently supported formats: books, book chapters, conference papers, journal articles (Batch) import Norwegian white papers (.e., Meld. St., St.meld.) official Norwegian reports (.e., NOU). Batch import R packages CRAN. Search CrossRef, automatically manually, author(s), title, year. Augment Cristin references ISBN, DOI, CrossRef search. Added https://oeysan.github.io/c2z/ documentation Added NEWS.md file track changes package. Added TODO.md file track future work package. Added README.md file introduction package. Added CONDUCT.md people nice. Added badge.webp just ","code":""}]
